{"version":3,"sources":["components/headerContentList/index.js","images/pexels-dziana-hasanbekava-5480827.jpg","api/tmdb-api.js","components/spinner/index.js","components/advancedFilterModal/index.js","components/filterMoviesCard/index.js","images/film-poster-placeholder.png","components/contentCard/index.js","util.js","components/contentList/index.js","components/trendingInputFilter/index.js","components/advancedFilterPopper/index.js","components/templateContentListPage/index.js","contexts/moviesContext.js","contexts/tvShowsContext.js","components/cardIcons/addToFavorites.js","pages/movieListPage.js","firebase.js","components/contentReviews/index.js","components/contentDetail/index.js","components/headerContent/index.js","components/templateContentPage/index.js","components/similarContent/index.js","components/castComponent/index.js","components/castModal/index.js","pages/movieDetailsPage.js","components/cardIcons/removeFromFavorites.js","components/cardIcons/writeReview.js","pages/favoriteMoviesPage.js","components/cardIcons/removeFromMustWatch.js","pages/mustWatchPage.js","components/individualReview/index.js","pages/reviewPage.js","components/cardIcons/addToMustWatch.js","pages/upcomingMoviesPage.js","components/siteHeader/index.js","components/reviewForm/index.js","pages/addReviewPage.js","pages/tvListPage.js","components/castMemberAvatar/index.js","components/castMemberIndividualInfo/index.js","components/castMemberBiography/index.js","components/castMemberCredits/index.js","pages/castMemberInfo.js","components/trendingPageTitle/index.js","components/trendingImageList/index.js","pages/trendingPage.js","pages/tvDetailsPage.js","pages/homePage.js","pages/createSessionPage.js","pages/logoutPage.js","pages/advancedFilterPage.js","components/privateRoute/index.js","components/publicRoute/index.js","components/cardIcons/removeFromReviewed.js","pages/userReviewedContent.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","justifyContent","flexWrap","marginBottom","spacing","withRouter","title","history","useTheme","isMobile","useMediaQuery","breakpoints","down","classes","Paper","component","className","IconButton","aria-label","onClick","goBack","color","fontSize","Typography","variant","goForward","getMovies","page","a","fetch","process","response","ok","Error","json","message","getSimilarMovies","args","queryKey","id","getSimilarTvShows","getMovieCast","getTvCast","getPersonDetail","getPersonCredits","getTrendingItems","media_type","time","getTvShows","filteredMoviesSearch","release_year","average_rating_greater_than","average_rating_less_than","duration_less_than","duration_greater_than","original_language","sort_category","first_air_date_year","movieType","window","location","href","includes","initialRequestString","getMovie","getTvShow","getGenres","mediaType","getMovieImages","getTvShowImages","getMovieReviews","then","res","results","getTvReviews","getUpComingMovies","getUpComingTvShows","date","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","formatDate","createRequestToken","askUserForAuthentication","sessionId","createUserSession","deniedAuthentication","requestToken","substring","Number","indexOf","headers","Accept","method","body","JSON","stringify","request_token","createGuestSession","getUserAccount","jsonResponse","localStorage","getItem","setItem","markAsFavourite","favourite","accountId","media_id","favorite","getFavourites","contentType","accountDetails","requestUrl","markAsMustWatch","watchlist","getMustWatchItems","getReviewed","reviewContent","rating","value","unReviewContent","marginLeft","CircularIndeterminate","CircularProgress","AdvancedFilterModal","handleReleaseYearChange","handleFirstAirYearChange","handleAverageRatingGreaterThanChange","handleAverageRatingLessThanChange","durationGreaterThanChange","durationLessThanChange","originalLanguageChange","sortCategoryChange","releaseYearFilter","yearOptions","firstAirDateFilter","averageRatingGreaterThanFilter","averageRatingLessThanFilter","durationGreaterThanFilter","durationLessThanFilter","originalLanguage","sortCategory","advancedSearch","averageRatingGreaterThanOptions","averageRatingLessThanOptions","durationLessThanOptions","durationGreaterThanOptions","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","paperMobile","maxWidth","media","height","formControl","margin","minWidth","modalInputFields","React","useState","top","left","transform","modalStyle","modalWrapperClass","style","FormControl","InputLabel","Select","labelId","onChange","map","MenuItem","duration","Button","FilterMoviesCard","props","useQuery","data","error","isLoading","isError","genres","unshift","name","firstYear","push","handleChange","e","type","preventDefault","onUserInput","Card","CardContent","TextField","label","titleFilter","target","genreFilter","genre","favouritepage","handleOpen","Modal","open","modalDisplay","onClose","handleClose","aria-labelledby","aria-describedby","CardMedia","image","img","card","avatar","ContentCard","linkUrl","dateDisplay","content","action","contentTitle","fullyLoaded","setFullyLoaded","useEffect","setInterval","release_date","first_air_date","CardHeader","header","mustWatch","Avatar","poster_path","Grid","container","review","item","xs","align","vote_average","CardActions","disableSpacing","to","size","isLoggedInUser","existingGuestSession","determinePaginationRange","resultsLength","Math","ceil","RatingOptions","metric","array","arr","originalArr","slice","ContentList","userContentReviews","enableQuery","mustWatchIds","favoriteIds","userContentReviewIds","mediaId","ratings","undefined","keepPreviousData","staleTime","enabled","favoriteContent","favoriteLoading","mustWatchContent","mustWatchLoading","individualItem","find","m","sm","md","lg","xl","TrendingInputFilter","labelValue","menuItems","helperText","formControlMobile","wrapperStyling","toUpperCase","FormHelperText","AdvancedFilterPopper","anchorEl","tableRows","table","tableHead","fontWeight","popper","flexDirection","popperOpen","Boolean","Popper","transition","TransitionProps","Fade","timeout","Table","TableHead","TableRow","TableCell","TableBody","row","scope","pagination","marginTop","textAlign","paginatedList","fab","bottom","right","zIndex","alignItems","snackbar","clearFilterButton","borderRadius","clearFilterButtonMobile","TemplateContentPage","handlePageChange","favouritePage","mediaTypeChosen","setDrawerOpen","drawerOpen","handleModalClose","filterPage","pageRange","filterButtonStyle","nameFilter","setNameFilter","setGenreFilter","setReleaseYearFilter","setAverageRatingGreaterThanFilter","setAverageRatingLessThanFilter","setDurationLessThanFilter","setDurationGreaterThanFilter","setOriginalLanguage","setSortCategory","firstAirDate","setFirstAirDate","setOpen","genreFilterAction","setGenreFilterAction","ratingOptions","durationOptions","setAnchorEl","setTableRows","setAverageRatingGreaterThanOptions","setAverageRatingLessThanOptions","setDurationGreaterThanOptions","setDurationLessThanOptions","rows","useHistory","Alert","elevation","genreId","displayedContent","filter","toLowerCase","search","genre_ids","handleFilterClose","getAdvancedFilterResults","pathname","state","releaseYear","averageRatingGreaterThan","averageRatingLessThan","durationLessThan","durationGreaterThan","console","log","alignContent","event","advancedFilterData","populateFilterTableRows","currentTarget","Fab","Pagination","count","severity","MoviesContext","createContext","MoviesContextProvider","myReviews","setMyReviews","favorites","setFavorites","setMustWatch","addToFavorites","removeFromFavorites","mId","Provider","addMustWatch","removeFromMustWatch","addReview","movie","children","TvShowsContext","TvShowsContextProvider","tvShow","AddToFavoritesIcon","contextType","context","useContext","handleAddToFavorites","reload","HomePage","favouriteIconDisplay","movies","setFilter","filterData","setFilterData","setPage","guestSession","hasMore","queryClient","prefetchQuery","total_results","filteredSearchFunction","filterApiCall","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","REACT_APP_APPID","firebase","initializeApp","tableMobile","ContentReviews","apiCall","allReviews","setUserId","reviews","setReviews","userReviews","setUserReviews","tableStyle","userData","itemsRef","database","ref","once","snapshot","items","val","reviewArray","firebaseId","author","fetchData","userReviewCheck","userReview","TableContainer","r","string","truncate","separator","listStyle","chip","ContentDetails","overview","Chip","g","icon","runtime","episode_run_time","revenue","toLocaleString","vote_count","production_countries","Drawer","anchor","tagLine","tagLineMobile","homepage","tagline","gridList","images","posters","ImageList","rowHeight","cols","GridListTile","gridListTile","src","file_path","alt","overflow","cursor","objectFit","imageList","titleBar","similarContentTitle","SimilarContent","itemData","titleMapping","urlLink","imageListWidthCols","ImageListItem","ImageListItemBar","subtitle","actionIcon","inline","individualItemMobile","plusIcon","CastComponent","cast","handleClickOpen","individualItemStyling","similarMoviesTitle","List","castMember","ListItem","ListItemAvatar","profile_path","ListItemText","primary","secondary","Fragment","character","Divider","DialogTitle","withStyles","closeButton","grey","red","getContrastText","green","blue","other","disableTypography","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","CastModal","actorDetail","infoDetailAvailable","biography","Dialog","fullWidth","dividers","dateOfBirth","from","popularity","autoFocus","Link","setActorDetails","personDetail","place_of_birth","birthday","match","params","similarMovies","movieCast","RemoveFromFavoritesIcon","handleRemoveFromFavorites","WriteReviewIcon","userId","contentId","FavoriteMoviesPage","setMediaType","RemoveFromMustWatchIcon","handleRemoveFromMustWatch","MustWatchPage","removeMustWatch","pag","IndividualReview","AddToMustWatchIcon","handleAddToMustWatch","upcomingContent","tvApiCallData","selectFavorite","movieId","flexGrow","offset","mixins","toolbar","menuOptions","loggedIn","path","handleMenuSelect","pageURL","AppBar","Toolbar","aria-controls","aria-haspopup","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","opt","form","textField","submit","marginRight","snack","existingReview","useForm","register","handleSubmit","errors","setRating","setUserAccountId","setAuthor","reviewContentText","setContent","handleSnackClose","onSubmit","child","update","Box","Snackbar","noValidate","required","multiline","inputRef","minLength","select","option","buttons","TvListPage","tvShows","show","CastMemberAvatar","large","largeMobile","castImageBubbleStyle","gutterBottom","CastMemberIndividualInfo","age","textDisplay","currentDate","text","CastMemberBiography","CastMemberCredits","rowsPerPage","handleChangePage","handleChangeRowsPerPage","columns","format","stickyHeader","column","hover","role","tabIndex","valueImageCheck","imageNullCheck","buttonCheck","code","TablePagination","rowsPerPageOptions","onPageChange","onRowsPerPageChange","root2","maxHeight","CastMemberInfoPage","setRowsPerPage","forEach","poster","average_rating","createData","Container","newPage","TrendingPageTitle","heading","headingMobile","TrendingImageList","trendingInfo","moreDetailUrl","imageListMobile","link","imageListStyling","gap","actionPosition","featured","gridParent","selectGrid","TrendingPage","setTime","i","featuredStatus","imagePath","backdrop_path","similarTvShows","tvShowCast","heroContent","heroButtons","showSpinner","setShowSpinner","guestSessionId","manageUserSession","handleUserSessionButtonClick","requestTokenResponse","handleGuestSessionButtonClick","guest_session_id","paragraph","CreateSessionPage","session_id","LogoutPage","removeItem","deleteSession","AdvancedFilterPage","filterState","PrivateRoute","Component","rest","redirect","endRedirectDelay","setTimeout","render","TransitionComponent","PublicRoute","RemoveFromReviewedIcon","contentReview","handleRemoveFromReviewed","remove","UserReviewedContent","QueryClient","defaultOptions","queries","refetchInterval","refetchOnWindowFocus","App","QueryClientProvider","client","AddReviewPage","exact","UpcomingMoviesPage","TvPage","MovieListPage","MoviePage","TvDetailsPage","ReviewPage","initialIsOpen","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.97291053.chunk.js","sourcesContent":["import React from \"react\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { withRouter } from \"react-router-dom\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    justifyContent: \"space-around\",\n    flexWrap: \"wrap\",\n    marginBottom: theme.spacing(1.5),\n  },\n}));\n\nconst Header = ({ title, history }) => {\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"md\"));\n  const classes = useStyles();\n  return (\n    <Paper component=\"div\" className={classes.root}>\n      <IconButton aria-label=\"go back\" onClick={() => history.goBack()}>\n        {!isMobile ? (\n          <ArrowBackIcon color=\"primary\" fontSize=\"large\" />\n        ) : (\n          <ArrowBackIcon color=\"primary\" fontSize=\"small\" />\n        )}\n      </IconButton>\n\n      {!isMobile ? (\n        <Typography variant=\"h4\" component=\"h3\">\n          {title}\n        </Typography>\n      ) : (\n        <Typography variant=\"h5\" component=\"h5\">\n          {title}\n        </Typography>\n      )}\n\n      <IconButton aria-label=\"go forward\" onClick={() => history.goForward()}>\n        {!isMobile ? (\n          <ArrowForwardIcon color=\"primary\" fontSize=\"large\" />\n        ) : (\n          <ArrowForwardIcon color=\"primary\" fontSize=\"small\" />\n        )}\n      </IconButton>\n    </Paper>\n  );\n};\n\nexport default withRouter(Header);\n","export default __webpack_public_path__ + \"static/media/pexels-dziana-hasanbekava-5480827.6123c500.jpg\";","export const getMovies = async (page) => {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/discover/movie?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&include_adult=false&include_video=false&page=${page}`\n  );\n  if (!response.ok) {\n    throw new Error(response.json().message);\n  }\n  return response.json();\n};\n\nexport const getSimilarMovies = async (args) => {\n  const [prefix, { id }] = args.queryKey;\n  const response = await fetch(\n    `https://api.themoviedb.org/3/movie/${id}/similar?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&page=1`\n  );\n  if (!response.ok) {\n    throw new Error(response.json().message);\n  }\n  return response.json();\n};\n\nexport const getSimilarTvShows = async (args) => {\n  const [prefix, { id }] = args.queryKey;\n  const response = await fetch(\n    `https://api.themoviedb.org/3/tv/${id}/similar?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&page=1`\n  );\n  if (!response.ok) {\n    throw new Error(response.json().message);\n  }\n  return response.json();\n};\n\nexport const getMovieCast = async (args) => {\n  const [prefix, { id }] = args.queryKey;\n  const response = await fetch(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&page=1`\n  );\n  if (!response.ok) {\n    throw new Error(response.json().message);\n  }\n  return response.json();\n};\n\nexport const getTvCast = async (args) => {\n  const [prefix, { id }] = args.queryKey;\n  const response = await fetch(\n    `https://api.themoviedb.org/3/tv/${id}/credits?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&page=1`\n  );\n  if (!response.ok) {\n    throw new Error(response.json().message);\n  }\n  return response.json();\n};\n\nexport const getPersonDetail = async (id) => {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/person/${id}?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&page=1`\n  );\n  return response.json();\n};\n\nexport const getPersonCredits = async (id) => {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/person/${id}/combined_credits?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US`\n  );\n  if (!response.ok) {\n    throw new Error(response.json().message);\n  }\n  return response.json();\n};\n\nexport const getTrendingItems = async (media_type, time) => {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/trending/${media_type}/${time}?api_key=${process.env.REACT_APP_TMDB_KEY}`\n  );\n\n  if (!response.ok) {\n    throw new Error(response.json().message);\n  }\n  return response.json();\n};\n\nexport const getTvShows = async (page) => {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/discover/tv?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&include_adult=false&page=${page}`\n  );\n  if (!response.ok) {\n    throw new Error(response.json().message);\n  }\n\n  return response.json();\n};\n\nexport const filteredMoviesSearch = async (\n  release_year,\n  average_rating_greater_than,\n  average_rating_less_than,\n  duration_less_than,\n  duration_greater_than,\n  original_language,\n  sort_category,\n  first_air_date_year,\n  page\n) => {\n  let mediaType;\n  let movieType = window.location.href.includes(\"movie\") ? true : false;\n  if (movieType) {\n    mediaType = \"movie\";\n  } else {\n    mediaType = \"tv\";\n  }\n  let initialRequestString = `https://api.themoviedb.org/3/discover/${mediaType}?api_key=${process.env.REACT_APP_TMDB_KEY}&language=en-US&include_adult=false&include_video=false&page=${page}`;\n\n  if (movieType) {\n    if (release_year) {\n      initialRequestString += `&year=${release_year}`;\n    }\n    if (average_rating_less_than) {\n      initialRequestString += `&vote_average.lte=${average_rating_less_than}`;\n    }\n  } else if (!movieType) {\n    if (first_air_date_year) {\n      initialRequestString += `&first_air_date_year=${first_air_date_year}`;\n    }\n  }\n\n  if (average_rating_greater_than) {\n    initialRequestString += `&vote_average.gte=${average_rating_greater_than}`;\n  }\n\n  if (duration_greater_than) {\n    initialRequestString += `&with_runtime.gte=${duration_greater_than}`;\n  }\n\n  if (duration_less_than) {\n    initialRequestString += `&with_runtime.lte=${duration_less_than}`;\n  }\n\n  if (original_language) {\n    initialRequestString += `&with_original_language=${original_language}`;\n  }\n\n  if (sort_category) {\n    initialRequestString += `&sort_by=${sort_category}`;\n  }\n\n  const response = await fetch(initialRequestString);\n  if (!response.ok) {\n    throw new Error(response.json().message);\n  }\n  return response.json();\n};\n\nexport const getMovie = async (args) => {\n  const [prefix, { id }] = args.queryKey;\n  const response = await fetch(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${process.env.REACT_APP_TMDB_KEY}`\n  );\n  if (!response.ok) {\n    throw new Error(response.json().message);\n  }\n  return response.json();\n};\n\nexport const getTvShow = async (args) => {\n  const [prefix, { id }] = args.queryKey;\n  const response = await fetch(\n    `https://api.themoviedb.org/3/tv/${id}?api_key=${process.env.REACT_APP_TMDB_KEY}`\n  );\n  if (!response.ok) {\n    throw new Error(response.json().message);\n  }\n  return response.json();\n};\n\nexport const getGenres = async (mediaType) => {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/genre/${mediaType}/list?api_key=` +\n      process.env.REACT_APP_TMDB_KEY +\n      \"&language=en-US\"\n  );\n  if (!response.ok) {\n    throw new Error(response.json().message);\n  }\n  return response.json();\n};\n\nexport const getMovieImages = async ({ queryKey }) => {\n  // eslint-disable-next-line no-unused-vars\n  const [prefix, { id }] = queryKey;\n  const response = await fetch(\n    `https://api.themoviedb.org/3/movie/${id}/images?api_key=${process.env.REACT_APP_TMDB_KEY}`\n  );\n  if (!response.ok) {\n    throw new Error(response.json().message);\n  }\n  return response.json();\n};\n\nexport const getTvShowImages = async ({ queryKey }) => {\n  // eslint-disable-next-line no-unused-vars\n  const [prefix, { id }] = queryKey;\n  const response = await fetch(\n    `https://api.themoviedb.org/3/tv/${id}/images?api_key=${process.env.REACT_APP_TMDB_KEY}`\n  );\n  if (!response.ok) {\n    throw new Error(response.json().message);\n  }\n  return response.json();\n};\n\nexport const getMovieReviews = (id) => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${process.env.REACT_APP_TMDB_KEY}`\n  )\n    .then((res) => res.json())\n    .then((json) => {\n      return json.results;\n    });\n};\n\nexport const getTvReviews = (id) => {\n  return fetch(\n    `https://api.themoviedb.org/3/tv/${id}/reviews?api_key=${process.env.REACT_APP_TMDB_KEY}`\n  )\n    .then((res) => res.json())\n    .then((json) => {\n      return json.results;\n    });\n};\n\nexport const getUpComingMovies = async (page) => {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/movie/upcoming?api_key=${process.env.REACT_APP_TMDB_KEY}&page=${page}`\n  );\n  if (!response.ok) {\n    throw new Error(response.json().message);\n  }\n  return response.json();\n};\n\nexport const getUpComingTvShows = async (page) => {\n  //export this into utils file\n  function formatDate(date) {\n    var d = new Date(date),\n      month = \"\" + (d.getMonth() + 1),\n      day = \"\" + d.getDate(),\n      year = d.getFullYear();\n\n    if (month.length < 2) month = \"0\" + month;\n    if (day.length < 2) day = \"0\" + day;\n\n    return [year, month, day].join(\"-\");\n  }\n  let date = formatDate(new Date());\n  const response = await fetch(\n    `https://api.themoviedb.org/3/discover/tv?api_key=${process.env.REACT_APP_TMDB_KEY}&page=${page}&first_air_date.gte=${date}`\n  );\n  if (!response.ok) {\n    throw new Error(response.json().message);\n  }\n  return response.json();\n};\n\nexport const createRequestToken = async () => {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/authentication/token/new?api_key=${process.env.REACT_APP_TMDB_KEY}`\n  );\n  if (!response.ok) {\n    throw new Error(response.json().message);\n  }\n  return response.json();\n};\n\nexport const askUserForAuthentication = async (sessionId) => {\n  window.location.href = `https://www.themoviedb.org/authenticate/${sessionId}?redirect_to=http://localhost:3000/success`;\n};\n\nexport const createUserSession = async () => {\n  let deniedAuthentication = window.location.href.includes(\"denied=true\");\n  let requestToken = window.location.href.substring(\n    Number(window.location.href.indexOf(\"=\")) + 1,\n    Number(window.location.href.indexOf(\"&\"))\n  );\n\n  if (deniedAuthentication) {\n    window.location.href = \"/\";\n  } else {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/authentication/session/new?api_key=${process.env.REACT_APP_TMDB_KEY}`,\n      {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        method: \"POST\",\n        body: JSON.stringify({ request_token: `${requestToken}` }),\n      }\n    );\n    if (!response.ok) {\n      throw new Error(response.json().message);\n    }\n    return response.json();\n  }\n};\n\nexport const createGuestSession = async () => {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/authentication/guest_session/new?api_key=${process.env.REACT_APP_TMDB_KEY}`\n  );\n\n  if (!response.ok) {\n    throw new Error(response.json().message);\n  }\n  return response.json();\n};\n\nexport const getUserAccount = async (sessionId) => {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/account?api_key=${process.env.REACT_APP_TMDB_KEY}&session_id=${sessionId}`\n  );\n  if (!response.ok) {\n    throw new Error(response.json().message);\n  }\n  let jsonResponse = await response.json();\n  if (!localStorage.getItem(\"accountId\")) {\n    localStorage.setItem(\"accountId\", jsonResponse.id);\n  }\n  return jsonResponse;\n};\n\n//NOT WORKING CORRECTLY ON API Side\nexport const deleteUserSession = async (sessionId) => {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/authentication/session/?api_key=${process.env.REACT_APP_TMDB_KEY}`,\n    {\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      method: \"DELETE\",\n      body: JSON.stringify({ session_id: `${sessionId}` }),\n    }\n  );\n\n  if (!response.ok) {\n    throw new Error(response.json().message);\n  }\n  return response.json();\n};\n\nexport const markAsFavourite = async (mediaType, id, favourite) => {\n  let sessionId = localStorage.getItem(\"session\");\n  let accountId = localStorage.getItem(\"accountId\");\n  const response = await fetch(\n    `https://api.themoviedb.org/3/account/${accountId}/favorite?api_key=${process.env.REACT_APP_TMDB_KEY}&session_id=${sessionId}`,\n    {\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      method: \"POST\",\n      body: JSON.stringify({\n        media_type: `${mediaType}`,\n        media_id: id,\n        favorite: favourite,\n      }),\n    }\n  );\n\n  if (!response.ok) {\n    throw new Error(response.json().message);\n  }\n  return response.json();\n};\n\nexport const getFavourites = async (mediaType, page) => {\n  let contentType = mediaType === \"movie\" ? \"movies\" : \"tv\";\n  let sessionId = localStorage.getItem(\"session\");\n  let accountDetails = await getUserAccount(sessionId);\n  let accountId = accountDetails.id;\n  let requestUrl;\n\n  if (page) {\n    requestUrl = `https://api.themoviedb.org/3/account/${accountId}/favorite/${contentType}?api_key=${process.env.REACT_APP_TMDB_KEY}&session_id=${sessionId}&language=en-US&sort_by=created_at.desc&page=${page}`;\n  } else {\n    requestUrl = `https://api.themoviedb.org/3/account/${accountId}/favorite/${contentType}?api_key=${process.env.REACT_APP_TMDB_KEY}&session_id=${sessionId}&language=en-US&sort_by=created_at.desc`;\n  }\n\n  const response = await fetch(requestUrl);\n  if (!response.ok) {\n    throw new Error(response.json().message);\n  }\n  let jsonResponse = await response.json();\n  return jsonResponse.results;\n};\n\nexport const markAsMustWatch = async (mediaType, id, watchlist) => {\n  let sessionId = localStorage.getItem(\"session\");\n  let accountId = localStorage.getItem(\"accountId\");\n  const response = await fetch(\n    `https://api.themoviedb.org/3/account/${accountId}/watchlist?api_key=${process.env.REACT_APP_TMDB_KEY}&session_id=${sessionId}`,\n    {\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      method: \"POST\",\n      body: JSON.stringify({\n        media_type: `${mediaType}`,\n        media_id: id,\n        watchlist: watchlist,\n      }),\n    }\n  );\n\n  if (!response.ok) {\n    throw new Error(response.json().message);\n  }\n  return response.json();\n};\n\nexport const getMustWatchItems = async (mediaType, page) => {\n  let contentType = mediaType === \"movie\" ? \"movies\" : \"tv\";\n  let requestUrl;\n  let sessionId = localStorage.getItem(\"session\");\n  let accountDetails = await getUserAccount(sessionId);\n  let accountId = accountDetails.id;\n\n  if (page) {\n    requestUrl = `https://api.themoviedb.org/3/account/${accountId}/watchlist/${contentType}?api_key=${process.env.REACT_APP_TMDB_KEY}&session_id=${sessionId}&language=en-US&sort_by=created_at.desc&page=${page}`;\n  } else {\n    requestUrl = `https://api.themoviedb.org/3/account/${accountId}/watchlist/${contentType}?api_key=${process.env.REACT_APP_TMDB_KEY}&session_id=${sessionId}&language=en-US&sort_by=created_at.desc`;\n  }\n\n  const response = await fetch(requestUrl);\n  if (!response.ok) {\n    throw new Error(response.json().message);\n  }\n  let jsonResponse = await response.json();\n  return jsonResponse.results;\n};\n\nexport const getReviewed = async (mediaType, page) => {\n  let contentType = mediaType === \"movie\" ? \"movies\" : \"tv\";\n  let requestUrl;\n  let sessionId = localStorage.getItem(\"session\");\n  let accountDetails = await getUserAccount(sessionId);\n  let accountId = accountDetails.id;\n\n  if (page) {\n    requestUrl = `https://api.themoviedb.org/3/account/${accountId}/rated/${contentType}?api_key=${process.env.REACT_APP_TMDB_KEY}&session_id=${sessionId}&language=en-US&sort_by=created_at.desc&page=${page}`;\n  } else {\n    requestUrl = `https://api.themoviedb.org/3/account/${accountId}/rated/${contentType}?api_key=${process.env.REACT_APP_TMDB_KEY}&session_id=${sessionId}&language=en-US&sort_by=created_at.desc`;\n  }\n\n  const response = await fetch(requestUrl);\n  if (!response.ok) {\n    throw new Error(response.json().message);\n  }\n  let jsonResponse = await response.json();\n  return jsonResponse.results;\n};\n\nexport const reviewContent = async (mediaType, id, rating) => {\n  let sessionId = localStorage.getItem(\"session\");\n  const response = await fetch(\n    `https://api.themoviedb.org/3/${mediaType}/${id}/rating?api_key=${process.env.REACT_APP_TMDB_KEY}&session_id=${sessionId}`,\n    {\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      method: \"POST\",\n      body: JSON.stringify({\n        value: rating,\n      }),\n    }\n  );\n};\n\nexport const unReviewContent = async (mediaType, id) => {\n  let sessionId = localStorage.getItem(\"session\");\n  const response = await fetch(\n    `https://api.themoviedb.org/3/${mediaType}/${id}/rating?api_key=${process.env.REACT_APP_TMDB_KEY}&session_id=${sessionId}`,\n    {\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      method: \"DELETE\",\n    }\n  );\n};\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    \"& > * + *\": {\n      marginLeft: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function CircularIndeterminate() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Button from \"@material-ui/core/Button\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\nexport default function AdvancedFilterModal({\n  handleReleaseYearChange,\n  handleFirstAirYearChange,\n  handleAverageRatingGreaterThanChange,\n  handleAverageRatingLessThanChange,\n  durationGreaterThanChange,\n  durationLessThanChange,\n  originalLanguageChange,\n  sortCategoryChange,\n  mediaType,\n  releaseYearFilter,\n  yearOptions,\n  firstAirDateFilter,\n  averageRatingGreaterThanFilter,\n  averageRatingLessThanFilter,\n  durationGreaterThanFilter,\n  durationLessThanFilter,\n  originalLanguage,\n  sortCategory,\n  advancedSearch,\n  averageRatingGreaterThanOptions,\n  averageRatingLessThanOptions,\n  durationLessThanOptions,\n  durationGreaterThanOptions,\n}) {\n  const useStyles = makeStyles((theme) => ({\n    paper: {\n      position: \"absolute\",\n      width: 400,\n      backgroundColor: theme.palette.background.paper,\n      border: \"2px solid #000\",\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n    },\n    paperMobile: {\n      position: \"absolute\",\n      width: 250,\n      backgroundColor: theme.palette.background.paper,\n      border: \"2px solid #000\",\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n    },\n    root: {\n      maxWidth: 345,\n      backgroundColor: \"rgb(204, 204, 0)\",\n    },\n    media: { height: 300 },\n\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 220,\n      backgroundColor: \"rgb(255, 255, 255)\",\n    },\n    modalInputFields: {\n      margin: theme.spacing(1),\n      width: \"90%\",\n      backgroundColor: \"rgb(255, 255, 255)\",\n    },\n  }));\n\n  function getModalStyle() {\n    const top = 50;\n    const left = 50;\n\n    return {\n      top: `${top}%`,\n      left: `${left}%`,\n      transform: `translate(-${top}%, -${left}%)`,\n    };\n  }\n\n  const [modalStyle] = React.useState(getModalStyle);\n\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"md\"));\n  const classes = useStyles();\n  let modalWrapperClass = isMobile ? classes.paperMobile : classes.paper;\n  return (\n    <div style={modalStyle} className={modalWrapperClass}>\n      <Typography variant=\"h5\" component=\"h1\">\n        Advanced Filter\n      </Typography>\n      {mediaType === \"movie\" ? (\n        <FormControl className={classes.modalInputFields}>\n          <InputLabel id=\"demo-simple-select-label\">Release Year</InputLabel>\n          <Select\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={releaseYearFilter}\n            onChange={handleReleaseYearChange}\n          >\n            {yearOptions.map((year) => {\n              return (\n                <MenuItem key={year} value={`${year}`}>\n                  {year}\n                </MenuItem>\n              );\n            })}\n          </Select>\n        </FormControl>\n      ) : (\n        <FormControl className={classes.modalInputFields}>\n          <InputLabel id=\"demo-simple-select-label\">\n            First Air Date Year\n          </InputLabel>\n          <Select\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={firstAirDateFilter}\n            onChange={handleFirstAirYearChange}\n          >\n            <MenuItem value=\"\"></MenuItem>\n            {yearOptions.map((year) => {\n              return (\n                <MenuItem key={year} value={`${year}`}>\n                  {year}\n                </MenuItem>\n              );\n            })}\n          </Select>\n        </FormControl>\n      )}\n\n      <FormControl className={classes.modalInputFields}>\n        <InputLabel id=\"demo-simple-select-label\">\n          Average Rating Greater Than\n        </InputLabel>\n        <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={averageRatingGreaterThanFilter}\n          onChange={handleAverageRatingGreaterThanChange}\n        >\n          <MenuItem value=\"\"></MenuItem>\n          {averageRatingGreaterThanOptions.map((year) => {\n            return (\n              <MenuItem key={year} value={`${year}`}>\n                {year}\n              </MenuItem>\n            );\n          })}\n        </Select>\n      </FormControl>\n\n      <FormControl className={classes.modalInputFields}>\n        <InputLabel id=\"demo-simple-select-label\">\n          Average Rating Less Than\n        </InputLabel>\n        <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={averageRatingLessThanFilter}\n          onChange={handleAverageRatingLessThanChange}\n        >\n          <MenuItem value=\"\"></MenuItem>\n          {averageRatingLessThanOptions.map((year) => {\n            return (\n              <MenuItem key={year} value={`${year}`}>\n                {year}\n              </MenuItem>\n            );\n          })}\n        </Select>\n      </FormControl>\n\n      <FormControl className={classes.modalInputFields}>\n        <InputLabel id=\"demo-simple-select-label\">\n          Duration Greater Than\n        </InputLabel>\n        <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={durationGreaterThanFilter}\n          onChange={durationGreaterThanChange}\n        >\n          <MenuItem value=\"\"></MenuItem>\n          {durationGreaterThanOptions.map((duration) => {\n            return (\n              <MenuItem key={duration} value={`${duration}`}>\n                {duration}\n              </MenuItem>\n            );\n          })}\n        </Select>\n      </FormControl>\n\n      <FormControl className={classes.modalInputFields}>\n        <InputLabel id=\"demo-simple-select-label\">\n          Duration Less Than\n        </InputLabel>\n        <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={durationLessThanFilter}\n          onChange={durationLessThanChange}\n        >\n          <MenuItem value=\"\"></MenuItem>\n          {durationLessThanOptions.map((duration) => {\n            return (\n              <MenuItem key={duration} value={`${duration}`}>\n                {duration}\n              </MenuItem>\n            );\n          })}\n        </Select>\n      </FormControl>\n\n      <FormControl className={classes.modalInputFields}>\n        <InputLabel id=\"demo-simple-select-label\">Original Language</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={originalLanguage}\n          onChange={originalLanguageChange}\n        >\n          <MenuItem value=\"\"></MenuItem>\n          <MenuItem value={\"fr\"}>French</MenuItem>\n          <MenuItem value={\"es\"}>Spanish</MenuItem>\n          <MenuItem value={\"de\"}>German</MenuItem>\n          <MenuItem value={\"it\"}>Italian</MenuItem>\n          <MenuItem value={\"ja\"}>Japanese</MenuItem>\n        </Select>\n      </FormControl>\n\n      <FormControl className={classes.modalInputFields}>\n        <InputLabel id=\"demo-simple-select-label\">Sort By</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={sortCategory}\n          onChange={sortCategoryChange}\n        >\n          <MenuItem value=\"\"></MenuItem>\n          <MenuItem value={\"popularity.asc\"}>Most Popular</MenuItem>\n          <MenuItem value={\"popularity.desc\"}>Least Popular</MenuItem>\n          <MenuItem value={\"revenue.asc\"}>Highest Grossing Revenue</MenuItem>\n          <MenuItem value={\"revenue.desc\"}>Lowest Grossing Revenue</MenuItem>\n          <MenuItem value={\"vote_count.asc\"}>Most Votes</MenuItem>\n          <MenuItem value={\"vote_count.desc\"}>Least Votes</MenuItem>\n        </Select>\n      </FormControl>\n\n      <FormControl className={classes.modalInputFields}>\n        <Button variant=\"contained\" color=\"primary\" onClick={advancedSearch}>\n          Filter\n        </Button>\n      </FormControl>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport img from \"../../images/pexels-dziana-hasanbekava-5480827.jpg\";\nimport { getGenres } from \"../../api/tmdb-api\";\nimport { useQuery } from \"react-query\";\nimport Spinner from \"../spinner\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Button from \"@material-ui/core/Button\";\nimport AdvancedFilterModal from \"../advancedFilterModal\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 345,\n    backgroundColor: \"rgb(204, 204, 0)\",\n  },\n  media: { height: 300 },\n\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 220,\n    backgroundColor: \"rgb(255, 255, 255)\",\n  },\n}));\n\nexport default function FilterMoviesCard(props) {\n  const classes = useStyles();\n  let title = props.mediaType === \"movie\" ? \"Filter movies\" : \"Filter TV Shows\";\n  const { data, error, isLoading, isError } = useQuery(\n    `${props.mediaType}-genres`,\n    () => getGenres(props.mediaType)\n  );\n\n  if (isLoading) {\n    return <Spinner />;\n  }\n\n  if (isError) {\n    return <h1>{error.message}</h1>;\n  }\n  const genres = data.genres;\n  if (genres.length === 19 || genres.length === 16) {\n    genres.unshift({ id: \"0\", name: \"All\" });\n  }\n\n  let firstYear = 2021;\n  let lastYear = 1920;\n  let yearOptions = [];\n\n  while (firstYear > lastYear) {\n    yearOptions.push(firstYear);\n    firstYear--;\n  }\n\n  const handleChange = (e, type, value) => {\n    e.preventDefault();\n    props.onUserInput(type, value); // NEW\n  };\n\n  const handleTextChange = (e, props) => {\n    handleChange(e, \"name\", e.target.value);\n  };\n\n  const handleGenreChange = (e) => {\n    handleChange(e, \"genre\", e.target.value);\n  };\n\n  const handleReleaseYearChange = (e) => {\n    handleChange(e, \"release_year\", e.target.value);\n  };\n\n  const handleFirstAirYearChange = (e) => {\n    handleChange(e, \"first_air_date_year\", e.target.value);\n  };\n\n  const handleAverageRatingGreaterThanChange = (e) => {\n    handleChange(e, \"average_rating_greater_than\", e.target.value);\n  };\n\n  const handleAverageRatingLessThanChange = (e) => {\n    handleChange(e, \"average_rating_less_than\", e.target.value);\n  };\n\n  const durationGreaterThanChange = (e) => {\n    handleChange(e, \"duration_greater_than\", e.target.value);\n  };\n\n  const durationLessThanChange = (e) => {\n    handleChange(e, \"duration_less_than\", e.target.value);\n  };\n\n  const originalLanguageChange = (e) => {\n    handleChange(e, \"original_language\", e.target.value);\n  };\n\n  const sortCategoryChange = (e) => {\n    handleChange(e, \"sort_category\", e.target.value);\n  };\n\n  return (\n    <Card className={classes.root} variant=\"outlined\">\n      <CardContent>\n        <Typography variant=\"h5\" component=\"h1\">\n          <SearchIcon fontSize=\"large\" />\n          {title}\n        </Typography>\n        <TextField\n          className={classes.formControl}\n          id=\"filled-search\"\n          label=\"Search field\"\n          type=\"search\"\n          value={props.titleFilter}\n          variant=\"filled\"\n          onChange={handleTextChange}\n        />\n        <FormControl className={classes.formControl}>\n          <InputLabel id=\"genre-label\">Genre</InputLabel>\n          <Select\n            labelId=\"genre-label\"\n            id=\"genre-select\"\n            value={props.genreFilter}\n            onChange={handleGenreChange}\n          >\n            {genres.map((genre) => {\n              return (\n                <MenuItem key={genre.id} value={genre.id}>\n                  {genre.name}\n                </MenuItem>\n              );\n            })}\n          </Select>\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          {props.favouritepage ? (\n            <></>\n          ) : (\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={props.handleOpen}\n            >\n              Advanced Filter\n            </Button>\n          )}\n\n          <Modal\n            open={props.modalDisplay}\n            onClose={props.handleClose}\n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\"\n          >\n            <AdvancedFilterModal\n              handleReleaseYearChange={handleReleaseYearChange}\n              handleFirstAirYearChange={handleFirstAirYearChange}\n              handleAverageRatingGreaterThanChange={\n                handleAverageRatingGreaterThanChange\n              }\n              handleAverageRatingLessThanChange={\n                handleAverageRatingLessThanChange\n              }\n              durationGreaterThanChange={durationGreaterThanChange}\n              durationLessThanChange={durationLessThanChange}\n              originalLanguageChange={originalLanguageChange}\n              sortCategoryChange={sortCategoryChange}\n              mediaType={props.mediaType}\n              releaseYearFilter={props.releaseYearFilter}\n              yearOptions={yearOptions}\n              firstAirDateFilter={props.firstAirDateFilter}\n              averageRatingGreaterThanFilter={\n                props.averageRatingGreaterThanFilter\n              }\n              averageRatingLessThanFilter={props.averageRatingLessThanFilter}\n              durationGreaterThanFilter={props.durationGreaterThanFilter}\n              durationLessThanFilter={props.durationLessThanFilter}\n              originalLanguage={props.originalLanguage}\n              sortCategory={props.sortCategory}\n              advancedSearch={props.advancedSearch}\n              averageRatingGreaterThanOptions={\n                props.averageRatingGreaterThanOptions\n              }\n              averageRatingLessThanOptions={props.averageRatingLessThanOptions}\n              durationLessThanOptions={props.durationLessThanOptions}\n              durationGreaterThanOptions={props.durationGreaterThanOptions}\n            />\n          </Modal>\n        </FormControl>\n      </CardContent>\n      <CardMedia className={classes.media} image={img} title=\"Filter\" />\n      <CardContent>\n        <Typography variant=\"h5\" component=\"h1\">\n          <SearchIcon fontSize=\"large\" />\n          {title}\n          <br />\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/film-poster-placeholder.9a8182eb.png\";","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport CalendarIcon from \"@material-ui/icons/CalendarTodayTwoTone\";\nimport StarRateIcon from \"@material-ui/icons/StarRate\";\nimport Grid from \"@material-ui/core/Grid\";\nimport img from \"../../images/film-poster-placeholder.png\";\nimport { Link } from \"react-router-dom\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport PlayListAddIcon from \"@material-ui/icons/PlaylistAdd\";\nimport Spinner from \"../spinner\";\n\nconst useStyles = makeStyles({\n  card: { maxWidth: 345 },\n  media: { height: 500 },\n  avatar: {\n    backgroundColor: \"rgb(255, 0, 0)\",\n  },\n});\n\nexport default function ContentCard({ content, action, mediaType }) {\n  let linkUrl, dateDisplay;\n\n  let contentTitle = mediaType === \"movie\" ? content.title : content.name;\n  const [fullyLoaded, setFullyLoaded] = useState(false);\n  const classes = useStyles();\n\n  useEffect(() => {\n    setInterval(() => {\n      setFullyLoaded(true);\n    }, 1000);\n  });\n\n  if (mediaType === \"movie\") {\n    linkUrl = `/movies/${content.id}`;\n    dateDisplay = content.release_date;\n  } else {\n    linkUrl = `/tv/${content.id}`;\n    dateDisplay = content.first_air_date;;\n  }\n\n\n\n  return (\n    <Card className={classes.card}>\n      {fullyLoaded ? (\n        <>\n          <CardHeader\n            className={classes.header}\n            avatar={\n              content.favorite && content.mustWatch ? (\n                <>\n                  <Avatar className={classes.avatar}>\n                    <FavoriteIcon />\n                  </Avatar>\n                  <Avatar className={classes.avatar}>\n                    <PlayListAddIcon />\n                  </Avatar>\n                </>\n              ) : content.favorite ? (\n                <Avatar className={classes.avatar}>\n                  <FavoriteIcon />\n                </Avatar>\n              ) : content.mustWatch ? (\n                <Avatar className={classes.avatar}>\n                  <PlayListAddIcon />\n                </Avatar>\n              ) : null\n            }\n            title={\n              <Typography variant=\"h5\" component=\"p\">\n                {contentTitle}{\" \"}\n              </Typography>\n            }\n          />\n          <CardMedia\n            className={classes.media}\n            image={\n              content.poster_path\n                ? `https://image.tmdb.org/t/p/w500/${content.poster_path}`\n                : img\n            }\n          />\n          <CardContent>\n            <Grid container>\n              {!content.review ?\n                <>\n                  <Grid item xs={6}>\n                    <Typography variant=\"h6\" component=\"p\">\n\n                      <CalendarIcon fontSize=\"small\" />\n                      {dateDisplay}\n\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={6}>\n                    <Typography variant=\"h6\" component=\"p\">\n                      <StarRateIcon fontSize=\"small\" />\n                      {\"  \"} {content.vote_average}{\" \"}\n                    </Typography>\n                  </Grid></> : <><Grid item xs={12}><Typography align=\"center\" color=\"primary\" variant=\"h6\" component=\"p\">Your Rating: {content.rating}</Typography><Typography align=\"center\" color=\"textSecondary\" variant=\"h6\" component=\"p\">Your Review</Typography><Typography variant=\"h6\" align=\"center\" component=\"p\">{content.review}</Typography></Grid></>\n              }\n            </Grid>\n          </CardContent>\n          <CardActions disableSpacing>\n            {action(content)}\n            <Link to={linkUrl}>\n              <Button variant=\"outlined\" size=\"medium\" color=\"primary\">\n                More Info ...\n              </Button>\n            </Link>\n          </CardActions>\n        </>\n      ) : (\n        <>\n          <CardContent>\n            <Spinner height={250} />\n          </CardContent>\n        </>\n      )}\n    </Card>\n  );\n}\n","import truncate from \"lodash/truncate\";\n\nexport function excerpt(string) {\n  return truncate(string, {\n    length: 400, // maximum 400 characters\n    separator: /,?\\.* +/, // separate by spaces, including preceding commas and periods\n  });\n}\n\nexport function isLoggedInUser() {\n  let userSessionId = localStorage.getItem(\"session\");\n  return userSessionId;\n}\nexport function existingGuestSession() {\n  let guestSessionId = localStorage.getItem(\"guest-session\");\n  return guestSessionId;\n}\nexport function determinePaginationRange(resultsLength) {\n  return Math.ceil(resultsLength / 20);\n}\nexport function populateFilterTableRows(advancedFilterData) {\n  let rows = [];\n  if (\n    advancedFilterData.releaseYear &&\n    advancedFilterData.releaseYear.length > 0\n  ) {\n    rows.push({ title: \"Release Year\", value: advancedFilterData.releaseYear });\n  }\n  if (advancedFilterData.averageRatingGreaterThan > 0) {\n    rows.push({\n      title: \"Average Rating Greater Than\",\n      value: advancedFilterData.averageRatingGreaterThan,\n    });\n  }\n  if (advancedFilterData.averageRatingLessThan.length > 0) {\n    rows.push({\n      title: \"Average Rating Less Than\",\n      value: advancedFilterData.averageRatingLessThan,\n    });\n  }\n  if (advancedFilterData.durationGreaterThan.length > 0) {\n    rows.push({\n      title: \"Duration Greater Than\",\n      value: advancedFilterData.durationGreaterThan,\n    });\n  }\n  if (advancedFilterData.durationLessThan.length > 0) {\n    rows.push({\n      title: \"Duration Less Than\",\n      value: advancedFilterData.durationLessThan,\n    });\n  }\n  if (advancedFilterData.originalLanguage.length > 0) {\n    let originalLanguage;\n    switch (advancedFilterData.originalLanguage) {\n      case \"de\":\n        originalLanguage = \"German\";\n        break;\n      case \"fr\":\n        originalLanguage = \"French\";\n        break;\n      case \"ja\":\n        originalLanguage = \"Japanese\";\n        break;\n      case \"es\":\n        originalLanguage = \"Spanish\";\n        break;\n      case \"it\":\n        originalLanguage = \"Italian\";\n        break;\n    }\n    rows.push({ title: \"Original Language\", value: originalLanguage });\n  }\n  if (advancedFilterData.sortCategory.length > 0) {\n    let sortCategory;\n    switch (advancedFilterData.sortCategory) {\n      case \"popularity.asc\":\n        sortCategory = \"Most Popular\";\n        break;\n      case \"popularity.desc\":\n        sortCategory = \"Least Popular\";\n        break;\n      case \"revenue.asc\":\n        sortCategory = \"Highest Revenue\";\n        break;\n      case \"revenue.desc\":\n        sortCategory = \"Lowest Revenue\";\n        break;\n      case \"vote_count.asc\":\n        sortCategory = \"Most Votes\";\n        break;\n      case \"vote_count.desc\":\n        sortCategory = \"Least Votes\";\n        break;\n    }\n\n    rows.push({ title: \"Sort Category\", value: sortCategory });\n  }\n  if (advancedFilterData.firstAirDate.length > 0) {\n    rows.push({\n      title: \"First Air Date\",\n      value: advancedFilterData.firstAirDate,\n    });\n  }\n\n  return rows;\n}\n\nexport function RatingOptions(value, metric, array) {\n  let arr = [];\n  let originalArr = [...array];\n  if (metric === \"greaterThan\") {\n    arr = originalArr.slice(\n      originalArr.indexOf(Number(value)) + 1,\n      originalArr.length\n    );\n  } else if (metric === \"lessThan\") {\n    arr = originalArr.slice(0, originalArr.indexOf(Number(value)));\n  }\n\n  return arr;\n}\n\nexport function ratingOptions() {\n  return [\n    {\n      value: 10,\n      label: \"Outstanding - 10/10\",\n    },\n    {\n      value: 9,\n      label: \"Excellent - 9/10\",\n    },\n    {\n      value: 8,\n      label: \"Excellent - 8/10\",\n    },\n    {\n      value: 7,\n      label: \"Good - 7/10\",\n    },\n    {\n      value: 6,\n      label: \"Good - 6/10\",\n    },\n    {\n      value: 5,\n      label: \"Average - 5/10\",\n    },\n    {\n      value: 4,\n      label: \"Average - 4/10\",\n    },\n    {\n      value: 3,\n      label: \"Average - 3/10\",\n    },\n    {\n      value: 2,\n      label: \"Terrible - 2/10\",\n    },\n    {\n      value: 1,\n      label: \"Terrible - 1/10\",\n    },\n  ];\n}\n","import React from \"react\";\nimport ContentCard from \"../contentCard\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { isLoggedInUser, ratingOptions } from \"../../util\";\nimport { getMustWatchItems, getFavourites } from \"../../api/tmdb-api\";\nimport { useQuery } from \"react-query\";\n\nconst ContentList = ({ content, action, mediaType, userContentReviews }) => {\n  const enableQuery = isLoggedInUser() ? true : false;\n  let movieCards;\n  let mustWatchIds = [];\n  let favoriteIds = [];\n  let userContentReviewIds = [];\n\n  if (userContentReviews) {\n    if (userContentReviews.length > 0) {\n      for (let review in userContentReviews) {\n        userContentReviewIds.push(userContentReviews[review].mediaId);\n      }\n    }\n  }\n\n  const ratings = ratingOptions();\n\n  const { data: favoriteContent, isLoading: favoriteLoading } = useQuery(\n    [`favourites`, mediaType],\n    () => getFavourites(mediaType, undefined),\n    { keepPreviousData: false, staleTime: 5000, enabled: enableQuery }\n  );\n\n  const { data: mustWatchContent, isLoading: mustWatchLoading } = useQuery(\n    [`mustWatch`, mediaType],\n    () => getMustWatchItems(mediaType, undefined),\n    { keepPreviousData: false, staleTime: 5000, enabled: enableQuery }\n  );\n\n  if (mustWatchLoading) {\n  } else if (!mustWatchLoading && isLoggedInUser()) {\n    mustWatchContent.map((mustWatch) => mustWatchIds.push(mustWatch.id));\n  }\n\n  if (favoriteLoading) {\n  } else if (!favoriteLoading && isLoggedInUser()) {\n    favoriteContent.map((favorite) => favoriteIds.push(favorite.id));\n  }\n\n  content.map((individualItem) => {\n    if (mustWatchIds.includes(individualItem.id)) {\n      individualItem.mustWatch = true;\n    }\n    if (favoriteIds.includes(individualItem.id)) {\n      individualItem.favorite = true;\n    }\n    if (userContentReviewIds.includes(individualItem.id)) {\n      let review = userContentReviews.find(\n        (item) => item.mediaId === individualItem.id\n      );\n\n      individualItem.review = review.content;\n      individualItem.rating = ratings.find(\n        (rating) => review.rating === rating.value\n      ).label;\n    }\n  });\n\n  if (content.length > 0) {\n    movieCards = content.map((m) => (\n      <Grid key={m.id} item xs={12} sm={6} md={4} lg={3} xl={2}>\n        <ContentCard\n          key={m.id}\n          content={m}\n          action={action}\n          mediaType={mediaType}\n        />\n      </Grid>\n    ));\n  } else {\n    movieCards = <></>;\n  }\n\n  return movieCards;\n};\n\nexport default ContentList;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\n\nexport default function TrendingInputFilter({\n  labelValue,\n  value,\n  handleChange,\n  menuItems,\n  helperText,\n  isMobile,\n}) {\n  const useStyles = makeStyles((theme) => ({\n    formControl: {\n      margin: \"20px\",\n      width: \"250px\",\n      minWidth: 120,\n    },\n    formControlMobile: {\n      margin: \"10px\",\n      width: \"50%\",\n      minWidth: 120,\n    },\n  }));\n\n  const classes = useStyles();\n  const wrapperStyling = isMobile\n    ? classes.formControlMobile\n    : classes.formControl;\n  return (\n    <FormControl className={wrapperStyling}>\n      <InputLabel id=\"demo-simple-select-helper-label\">{labelValue}</InputLabel>\n      <Select\n        labelId=\"demo-simple-select-helper-label\"\n        id=\"demo-simple-select-helper\"\n        value={value}\n        onChange={handleChange}\n      >\n        {menuItems.map((item) => {\n          return <MenuItem value={item}>{item.toUpperCase()}</MenuItem>;\n        })}\n      </Select>\n      <FormHelperText>{helperText}</FormHelperText>\n    </FormControl>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Popper from \"@material-ui/core/Popper\";\nimport Fade from \"@material-ui/core/Fade\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Spinner from \"../spinner\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nexport default function AdvancedFilterPopper({ anchorEl, tableRows, id }) {\n  const useStyles = makeStyles((theme) => ({\n    table: {\n      minWidth: 350,\n    },\n    tableHead: {\n      fontWeight: 700,\n    },\n    popper: {\n      padding: theme.spacing(2, 4, 3),\n\n      flexDirection: \"column\",\n      backgroundColor: \"#EFEFEF\",\n    },\n  }));\n\n  const popperOpen = Boolean(anchorEl);\n  //const id = open ? \"transitions-popper\" : undefined;\n\n  const classes = useStyles();\n  return (\n    <Popper id={id} open={popperOpen} anchorEl={anchorEl} transition>\n      {({ TransitionProps }) => (\n        <Fade {...TransitionProps} timeout={350}>\n          <div className={classes.popper}>\n            <Table className={classes.table} aria-label=\"simple table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell align=\"left\" className={classes.tableHead}>\n                    Filter Property\n                  </TableCell>\n                  <TableCell align=\"left\" className={classes.tableHead}>\n                    Value\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {tableRows ? (\n                  tableRows.map((row) => (\n                    <TableRow key={row.title}>\n                      <TableCell component=\"th\" scope=\"row\">\n                        {row.title}\n                      </TableCell>\n                      <TableCell align=\"left\">{row.value}</TableCell>\n                    </TableRow>\n                  ))\n                ) : (\n                  <Spinner />\n                )}\n              </TableBody>\n            </Table>\n          </div>\n        </Fade>\n      )}\n    </Popper>\n  );\n}\n","import React, { useState } from \"react\";\nimport Header from \"../headerContentList\";\nimport FilterCard from \"../filterMoviesCard\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ContentList from \"../contentList\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Fab from \"@material-ui/core/Fab\";\nimport NavigationIcon from \"@material-ui/icons/Navigation\";\nimport Modal from \"@material-ui/core/Modal\";\nimport TrendingInputFilter from \"../trendingInputFilter\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Button from \"@material-ui/core/Button\";\nimport { useHistory } from \"react-router-dom\";\nimport { populateFilterTableRows, RatingOptions } from \"../../util\";\nimport AdvancedFilterPopper from \"../advancedFilterPopper\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: \"20px\",\n  },\n  pagination: {\n    \"& > * + *\": {\n      marginTop: theme.spacing(2),\n      justifyContent: \"center\",\n      display: \"flex\",\n    },\n    textAlign: \"center\",\n  },\n  paginatedList: {\n    width: \"100%\",\n    margin: \"20px auto\",\n    textAlign: \"center\",\n  },\n  fab: {\n    position: \"fixed\",\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n    zIndex: \"1\",\n  },\n  paper: {\n    width: \"30%\",\n    height: \"10vh\",\n    margin: \"100px auto\",\n    textAlign: \"center\",\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  snackbar: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2),\n    },\n    textAlign: \"center\",\n    margin: \"10px auto\",\n  },\n  clearFilterButton: {\n    textAlign: \"center\",\n    display: \"flex\",\n    margin: \"10px auto\",\n    width: \"20vw\",\n    padding: \"5px\",\n    borderRadius: \"5px\",\n  },\n  clearFilterButtonMobile: {\n    textAlign: \"center\",\n    display: \"flex\",\n    margin: \"20px auto\",\n    width: \"80vw\",\n    padding: \"10px\",\n    borderRadius: \"5px\",\n  },\n}));\n\n//If advanced filter (reassign displayed movies)\n\nfunction TemplateContentPage({\n  content,\n  title,\n  action,\n  filteredMoviesSearch,\n  handlePageChange,\n  page,\n  mediaType,\n  favouritePage,\n  mediaTypeChosen,\n  handleClose,\n  setDrawerOpen,\n  drawerOpen,\n  handleModalClose,\n  filterPage,\n  pageRange,\n  userContentReviews,\n}) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"md\"));\n  const filterButtonStyle = isMobile\n    ? classes.clearFilterButtonMobile\n    : classes.clearFilterButton;\n\n  const [nameFilter, setNameFilter] = useState(\"\");\n  const [genreFilter, setGenreFilter] = useState(\"0\");\n  const [releaseYearFilter, setReleaseYearFilter] = useState(2021);\n  const [averageRatingGreaterThanFilter, setAverageRatingGreaterThanFilter] =\n    useState(\"\");\n  const [averageRatingLessThanFilter, setAverageRatingLessThanFilter] =\n    useState(\"\");\n  const [durationLessThanFilter, setDurationLessThanFilter] = useState(\"\");\n  const [durationGreaterThanFilter, setDurationGreaterThanFilter] =\n    useState(\"\");\n  const [originalLanguage, setOriginalLanguage] = useState(\"\");\n  const [sortCategory, setSortCategory] = useState(\"\");\n  const [firstAirDate, setFirstAirDate] = useState(\"\");\n  const [open, setOpen] = React.useState(false);\n  const [genreFilterAction, setGenreFilterAction] = useState(false);\n\n  const ratingOptions = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n  const durationOptions = [\n    5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95,\n    100, 105, 110, 115, 120, 125, 130, 135, 140, 145, 150,\n  ];\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [tableRows, setTableRows] = useState(undefined);\n  const [averageRatingGreaterThanOptions, setAverageRatingGreaterThanOptions] =\n    useState([1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  const [averageRatingLessThanOptions, setAverageRatingLessThanOptions] =\n    useState([1, 2, 3, 4, 5, 6, 7, 8, 9]);\n  const [durationGreaterThanOptions, setDurationGreaterThanOptions] = useState([\n    5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95,\n    100, 105, 110, 115, 120, 125, 130, 135, 140, 145, 150,\n  ]);\n  const [durationLessThanOptions, setDurationLessThanOptions] = useState([\n    5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 95,\n    100, 105, 110, 115, 120, 125, 130, 135, 140, 145, 150,\n  ]);\n\n  let rows = [];\n\n  const handleClick = (event) => {\n    rows = populateFilterTableRows(history.location.state);\n    setTableRows(rows);\n    setAnchorEl(anchorEl ? null : event.currentTarget);\n  };\n\n  const id = open ? \"transitions-popper\" : undefined;\n\n  let history = useHistory();\n\n  function Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n  }\n\n  const body = (\n    <div className={classes.paper}>\n      <TrendingInputFilter\n        labelValue={\"Media Type\"}\n        value={mediaTypeChosen}\n        handleChange={handleClose}\n        menuItems={[\"movie\", \"tv\"]}\n        helperText={\"Select the media type\"}\n      />\n    </div>\n  );\n\n  const genreId = Number(genreFilter);\n  let displayedContent = [];\n\n  if (content.length > 0 && mediaType === \"movie\") {\n    displayedContent = content\n      .filter((m) => {\n        return m.title.toLowerCase().search(nameFilter.toLowerCase()) !== -1;\n      })\n      .filter((m) => {\n        return genreId > 0 ? m.genre_ids.includes(genreId) : true;\n      });\n  } else if (content.length > 0 && mediaType === \"tv\") {\n    displayedContent = content\n      .filter((m) => {\n        return m.name.toLowerCase().search(nameFilter.toLowerCase()) !== -1;\n      })\n      .filter((m) => {\n        return genreId > 0 ? m.genre_ids.includes(genreId) : true;\n      });\n  }\n\n  const handleFilterClose = () => {\n    setOpen(false);\n  };\n\n  const handleAdvancedFilterClearButtonClick = () => {\n    if (mediaType === \"movie\") {\n      window.location.href = `/movies`;\n    } else {\n      window.location.href = `/tv`;\n    }\n  };\n\n  let getAdvancedFilterResults = () => {\n    filteredMoviesSearch(\n      releaseYearFilter,\n      averageRatingGreaterThanFilter,\n      averageRatingLessThanFilter,\n      durationLessThanFilter,\n      durationGreaterThanFilter,\n      originalLanguage,\n      sortCategory,\n      firstAirDate\n    );\n    handleFilterClose();\n    history.push({\n      pathname: `/${mediaType}/filter`,\n      state: {\n        releaseYear: releaseYearFilter,\n        averageRatingGreaterThan: averageRatingGreaterThanFilter,\n        averageRatingLessThan: averageRatingLessThanFilter,\n        durationLessThan: durationLessThanFilter,\n        durationGreaterThan: durationGreaterThanFilter,\n        originalLanguage: originalLanguage,\n        sortCategory: sortCategory,\n        firstAirDate: firstAirDate,\n      },\n    });\n    console.log(history);\n    window.location.href = `/${mediaType}/filter`;\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleChange = (type, value) => {\n    if (type === \"name\") setNameFilter(value);\n    else if (type === \"release_year\") {\n      setReleaseYearFilter(value);\n    } else if (type === \"first_air_date_year\") setFirstAirDate(value);\n    else if (type === \"average_rating_greater_than\") {\n      setAverageRatingGreaterThanFilter(value);\n      setAverageRatingLessThanOptions(\n        RatingOptions(value, \"greaterThan\", ratingOptions)\n      );\n    } else if (type === \"average_rating_less_than\") {\n      setAverageRatingLessThanFilter(value);\n      setAverageRatingGreaterThanOptions(\n        RatingOptions(value, \"lessThan\", ratingOptions)\n      );\n    } else if (type === \"duration_greater_than\") {\n      setDurationGreaterThanFilter(value);\n      setDurationLessThanOptions(\n        RatingOptions(value, \"greaterThan\", durationOptions)\n      );\n    } else if (type === \"duration_less_than\") {\n      setDurationLessThanFilter(value);\n      setDurationGreaterThanOptions(\n        RatingOptions(value, \"lessThan\", durationOptions)\n      );\n    } else if (type === \"original_language\") setOriginalLanguage(value);\n    else if (type === \"sort_category\") setSortCategory(value);\n    else {\n      setGenreFilter(value);\n      setGenreFilterAction(true);\n    }\n  };\n\n  return (\n    <Grid container className={classes.root}>\n      <Grid item xs={12}>\n        <Header title={title} />\n      </Grid>\n      {filterPage ? (\n        <Grid\n          display=\"flex\"\n          alignContent=\"center\"\n          justifyContent=\"center\"\n          item\n          xs={12}\n        >\n          <Button\n            className={filterButtonStyle}\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={handleAdvancedFilterClearButtonClick}\n          >\n            Clear Filter\n          </Button>\n          <Button\n            className={filterButtonStyle}\n            variant=\"contained\"\n            color=\"tertiary\"\n            aria-describedby={id}\n            onClick={handleClick}\n          >\n            See Filter Properties\n          </Button>\n          <AdvancedFilterPopper\n            anchorEl={anchorEl}\n            tableRows={tableRows}\n            id={id}\n          />\n        </Grid>\n      ) : (\n        <></>\n      )}\n      {displayedContent.length > 0 ? (\n        <Grid item container spacing={5}>\n          {!filterPage ? (\n            <Grid key=\"find\" item xs={12} sm={6} md={4} lg={3} xl={2}>\n              <FilterCard\n                onUserInput={handleChange}\n                titleFilter={nameFilter}\n                genreFilter={genreFilter}\n                releaseYearFilter={releaseYearFilter}\n                firstAirDateFilter={firstAirDate}\n                averageRatingGreaterThanFilter={averageRatingGreaterThanFilter}\n                averageRatingLessThanFilter={averageRatingLessThanFilter}\n                durationGreaterThanFilter={durationGreaterThanFilter}\n                durationLessThanFilter={durationLessThanFilter}\n                originalLanguage={originalLanguage}\n                sortCategory={sortCategory}\n                filteredMoviesSearch={filteredMoviesSearch}\n                advancedSearch={getAdvancedFilterResults}\n                modalDisplay={open}\n                handleOpen={handleOpen}\n                handleClose={handleFilterClose}\n                mediaType={mediaType}\n                favouritepage={favouritePage}\n                averageRatingGreaterThanOptions={\n                  averageRatingGreaterThanOptions\n                }\n                averageRatingLessThanOptions={averageRatingLessThanOptions}\n                durationGreaterThanOptions={durationGreaterThanOptions}\n                durationLessThanOptions={durationLessThanOptions}\n              />\n            </Grid>\n          ) : (\n            <></>\n          )}\n\n          {favouritePage ? (\n            <>\n              <Fab color=\"secondary\" variant=\"extended\" className={classes.fab}>\n                <NavigationIcon />\n                Type\n              </Fab>\n              <Fab\n                color=\"secondary\"\n                variant=\"extended\"\n                onClick={() => setDrawerOpen(true)}\n                className={classes.fab}\n              >\n                <NavigationIcon />\n                Type\n              </Fab>\n\n              <Modal\n                style={{ alignItems: \"center\", justifyContent: \"center\" }}\n                open={drawerOpen}\n                onClose={handleModalClose}\n                aria-labelledby=\"simple-modal-title\"\n                aria-describedby=\"simple-modal-description\"\n              >\n                {body}\n              </Modal>\n            </>\n          ) : (\n            <></>\n          )}\n\n          <ContentList\n            action={action}\n            content={displayedContent}\n            mediaType={mediaType}\n            userContentReviews={userContentReviews}\n          />\n          <Grid item xs={12}>\n            <div className={classes.pagination}>\n              <Typography>Page: {page}</Typography>\n              <Pagination\n                count={pageRange}\n                page={page}\n                className={classes.paginatedList}\n                onChange={handlePageChange}\n              />\n            </div>\n          </Grid>\n        </Grid>\n      ) : genreFilterAction || displayedContent.length === 0 ? (\n        <>\n          <Grid key=\"find\" item xs={12} sm={6} md={4} lg={3} xl={2}>\n            <FilterCard\n              onUserInput={handleChange}\n              titleFilter={nameFilter}\n              genreFilter={genreFilter}\n              releaseYearFilter={releaseYearFilter}\n              firstAirDateFilter={firstAirDate}\n              averageRatingGreaterThanFilter={averageRatingGreaterThanFilter}\n              averageRatingLessThanFilter={averageRatingLessThanFilter}\n              durationGreaterThanFilter={durationGreaterThanFilter}\n              durationLessThanFilter={durationLessThanFilter}\n              originalLanguage={originalLanguage}\n              sortCategory={sortCategory}\n              filteredMoviesSearch={filteredMoviesSearch}\n              advancedSearch={getAdvancedFilterResults}\n              modalDisplay={open}\n              handleOpen={handleOpen}\n              handleClose={handleFilterClose}\n              mediaType={mediaType}\n              favouritepage={favouritePage}\n              averageRatingGreaterThanOptions={averageRatingGreaterThanOptions}\n              averageRatingLessThanOptions={averageRatingLessThanOptions}\n              durationGreaterThanOptions={durationGreaterThanOptions}\n              durationLessThanOptions={durationLessThanOptions}\n            />\n          </Grid>\n          <Grid\n            key=\"find\"\n            className={classes.snackbar}\n            item\n            xs={12}\n            sm={6}\n            md={4}\n            lg={3}\n            xl={2}\n          >\n            <Alert severity=\"info\">No content to display.</Alert>{\" \"}\n          </Grid>\n          <Fab color=\"secondary\" variant=\"extended\" className={classes.fab}>\n            <NavigationIcon />\n            Type\n          </Fab>\n          <Fab\n            color=\"secondary\"\n            variant=\"extended\"\n            onClick={() => setDrawerOpen(true)}\n            className={classes.fab}\n          >\n            <NavigationIcon />\n            Type\n          </Fab>\n\n          <Modal\n            style={{ alignItems: \"center\", justifyContent: \"center\" }}\n            open={drawerOpen}\n            onClose={handleModalClose}\n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\"\n          >\n            {body}\n          </Modal>\n        </>\n      ) : (\n        <>\n          <Grid\n            key=\"find\"\n            className={classes.snackbar}\n            item\n            xs={12}\n            sm={6}\n            md={4}\n            lg={3}\n            xl={2}\n          >\n            <Alert severity=\"info\">No content to display.</Alert>{\" \"}\n          </Grid>\n          <Fab color=\"secondary\" variant=\"extended\" className={classes.fab}>\n            <NavigationIcon />\n            Type\n          </Fab>\n          <Fab\n            color=\"secondary\"\n            variant=\"extended\"\n            onClick={() => setDrawerOpen(true)}\n            className={classes.fab}\n          >\n            <NavigationIcon />\n            Type\n          </Fab>\n\n          <Modal\n            style={{ alignItems: \"center\", justifyContent: \"center\" }}\n            open={drawerOpen}\n            onClose={handleModalClose}\n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\"\n          >\n            {body}\n          </Modal>\n        </>\n      )}\n    </Grid>\n  );\n}\nexport default TemplateContentPage;\n","import React, { useState } from \"react\";\n\nexport const MoviesContext = React.createContext(null);\n\nconst MoviesContextProvider = (props) => {\n  const [myReviews, setMyReviews] = useState({});\n  const [favorites, setFavorites] = useState([]);\n  const [mustWatch, setMustWatch] = useState([]);\n\n  const addToFavorites = async (id) => {\n    setFavorites([...favorites, id]);\n  };\n  // We will use this function in a later section\n  const removeFromFavorites = async (id) => {\n    setFavorites(favorites.filter((mId) => mId !== id));\n  };\n\n  const addReview = (movie, review) => {\n    setMyReviews({ ...myReviews, [movie.id]: review });\n  };\n\n  const addMustWatch = (id) => {\n    setMustWatch([...mustWatch, id]);\n  };\n\n  const removeFromMustWatch = (id) => {\n    setMustWatch(mustWatch.filter((mId) => mId !== id));\n  };\n\n  return (\n    <MoviesContext.Provider\n      value={{\n        favorites,\n        mustWatch,\n        myReviews,\n        addToFavorites,\n        addMustWatch,\n        removeFromMustWatch,\n        removeFromFavorites,\n        addReview,\n      }}\n    >\n      {props.children}\n    </MoviesContext.Provider>\n  );\n};\n\nexport default MoviesContextProvider;\n","import React, { useState } from \"react\";\n\nexport const TvShowsContext = React.createContext(null);\n\nconst TvShowsContextProvider = (props) => {\n  const [myReviews, setMyReviews] = useState({});\n  const [favorites, setFavorites] = useState([]);\n  const [mustWatch, setMustWatch] = useState([]);\n\n  const addToFavorites = (id) => {\n    setFavorites([...favorites, id]);\n  };\n  // We will use this function in a later section\n  const removeFromFavorites = (id) => {\n    setFavorites(favorites.filter((mId) => mId !== id));\n  };\n\n  const addReview = (tvShow, review) => {\n    setMyReviews({ ...myReviews, [tvShow.id]: review });\n  };\n\n  const addMustWatch = (id) => {\n    setMustWatch([...mustWatch, id]);\n  };\n\n  const removeFromMustWatch = (id) => {\n    setMustWatch(mustWatch.filter((mId) => mId !== id));\n  };\n\n  return (\n    <TvShowsContext.Provider\n      value={{\n        favorites,\n        mustWatch,\n        addToFavorites,\n        addMustWatch,\n        removeFromMustWatch,\n        removeFromFavorites,\n        addReview,\n      }}\n    >\n      {props.children}\n    </TvShowsContext.Provider>\n  );\n};\n\nexport default TvShowsContextProvider;\n","import React, { useContext } from \"react\";\nimport { MoviesContext } from \"../../contexts/moviesContext\";\nimport { TvShowsContext } from \"../../contexts/tvShowsContext\";\nimport { markAsFavourite } from \"../../api/tmdb-api\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\n\nconst AddToFavoritesIcon = ({ content, mediaType }) => {\n  let contextType = mediaType === \"movie\" ? MoviesContext : TvShowsContext;\n  const context = useContext(contextType);\n\n  const handleAddToFavorites = async (e) => {\n    e.preventDefault();\n    window.location.reload();\n    await markAsFavourite(mediaType, content.id, true);\n\n    context.addToFavorites(content.id);\n  };\n  return (\n    <IconButton aria-label=\"add to favorites\" onClick={handleAddToFavorites}>\n      <FavoriteIcon color=\"primary\" fontSize=\"large\" />\n    </IconButton>\n  );\n};\n\nexport default AddToFavoritesIcon;\n","import React, { useState, useEffect } from \"react\";\nimport PageTemplate from \"../components/templateContentListPage\";\nimport { useQuery } from \"react-query\";\nimport Spinner from \"../components/spinner\";\nimport { getMovies, filteredMoviesSearch } from \"../api/tmdb-api\";\nimport AddToFavoritesIcon from \"../components/cardIcons/addToFavorites\";\nimport { queryClient } from \"../index\";\nimport { existingGuestSession, determinePaginationRange } from \"../util\";\n\nconst HomePage = () => {\n  let favouriteIconDisplay;\n  const [filter, setFilter] = useState(false);\n  const [filterData, setFilterData] = useState([]);\n  const [page, setPage] = React.useState(1);\n  const guestSession = existingGuestSession();\n  const { data, error, isLoading, isError } = useQuery(\n    [\"discover\", { id: page }],\n    () => getMovies(page),\n    { keepPreviousData: true, staleTime: 5000 }\n  );\n\n  const handlePageChange = (event, value) => {\n    setPage(value);\n  };\n  useEffect(() => {\n    if (data?.hasMore) {\n      queryClient.prefetchQuery([\"discover\", page + 1], () =>\n        getMovies(page + 1)\n      );\n    }\n  }, [data, page, queryClient]);\n\n  if (isLoading) {\n    return <Spinner />;\n  }\n\n  if (isError) {\n    return <h1>{error.message}</h1>;\n  }\n  let movies;\n  if (filter) {\n    movies = filterData;\n  } else {\n    movies = data.results;\n  }\n\n  const pageRange = determinePaginationRange(data.total_results);\n\n  if (!guestSession) {\n    favouriteIconDisplay = (movie) => {\n      return <AddToFavoritesIcon content={movie} mediaType={\"movie\"} />;\n    };\n  } else {\n    favouriteIconDisplay = (movie) => {\n      return null;\n    };\n  }\n\n  let filteredSearchFunction = async (\n    release_year,\n    average_rating_greater_than,\n    average_rating_less_than,\n    duration_less_than,\n    duration_greater_than,\n    original_language,\n    sort_category,\n    page\n  ) => {\n    let filterApiCall = await filteredMoviesSearch(\n      release_year,\n      average_rating_greater_than,\n      average_rating_less_than,\n      duration_less_than,\n      duration_greater_than,\n      original_language,\n      sort_category,\n      page\n    );\n    movies = filterApiCall.results;\n    setFilterData(filterApiCall.results);\n    setFilter(true);\n  };\n  return (\n    <PageTemplate\n      title=\"Discover Movies\"\n      content={movies}\n      action={favouriteIconDisplay}\n      filteredMoviesSearch={filteredSearchFunction}\n      handlePageChange={handlePageChange}\n      page={page}\n      mediaType={\"movie\"}\n      pageRange={pageRange}\n    />\n  );\n};\n\nexport default HomePage;\n","import firebase from \"firebase\";\nconst config = {\n  apiKey: `${process.env.REACT_APP_FIREBASE_API_KEY}`,\n  authDomain: `${process.env.REACT_APP_AUTH_DOMAIN}`,\n  databaseURL: `${process.env.REACT_APP_DATABASE_URL}`,\n  projectId: `${process.env.REACT_APP_PROJECT_ID}`,\n  storageBucket: `${process.env.REACT_APP_STORAGE_BUCKET}`,\n  messagingSenderId: `${process.env.REACT_APP_MESSAGING_SENDER_ID}`,\n  appId: `${process.env.REACT_APP_APPID}`,\n};\nfirebase.initializeApp(config);\nexport default firebase;\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { Link } from \"react-router-dom\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport {\n  getMovieReviews,\n  getTvReviews,\n  getUserAccount,\n} from \"../../api/tmdb-api\";\nimport { excerpt, isLoggedInUser } from \"../../util\";\nimport firebase from \"../../firebase\";\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 550,\n  },\n  tableMobile: {\n    width: 100,\n  },\n});\n\nexport default function ContentReviews({ movie, mediaType }) {\n  let apiCall = mediaType === \"movie\" ? getMovieReviews : getTvReviews;\n  const sessionId = isLoggedInUser();\n  let allReviews = [];\n  const classes = useStyles();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"md\"));\n  const [userId, setUserId] = useState(undefined);\n  const [reviews, setReviews] = useState([]);\n  const [userReviews, setUserReviews] = useState([]);\n\n  const tableStyle = isMobile ? classes.tableMobile : classes.table;\n\n  useEffect(() => {\n    apiCall(movie.id).then((reviews) => {\n      setReviews(reviews);\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      getUserAccount(sessionId).then((userData) => {\n        const itemsRef = firebase.database().ref(`${mediaType}/${userData.id}`);\n        setUserId(userData.id);\n\n        itemsRef.once(\"value\", (snapshot) => {\n          let items = snapshot.val();\n          let reviewArray = [];\n          for (let item in items) {\n            reviewArray.push({\n              firebaseId: item,\n              author: items[item].author,\n              mediaId: items[item].mediaId,\n              content: items[item].content,\n              rating: items[item].rating,\n            });\n          }\n          setUserReviews(reviewArray);\n        });\n      });\n    };\n\n    if (sessionId) {\n      fetchData();\n    }\n  }, [mediaType]);\n\n  allReviews = [...reviews];\n\n  if (userReviews.length > 0) {\n    let userReviewCheck = userReviews.find(\n      (review) => review.mediaId === movie.id\n    );\n    console.log(userReviewCheck);\n    if (userReviewCheck) {\n      allReviews = [\n        ...reviews,\n        {\n          id: userReviewCheck.firebaseId,\n          author: userReviewCheck.author,\n          content: userReviewCheck.content,\n          userReview: true,\n        },\n      ];\n    }\n  }\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={tableStyle} aria-label=\"reviews table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Author</TableCell>\n            <TableCell align=\"center\">Excerpt</TableCell>\n            <TableCell align=\"right\">More</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {allReviews.map((r) => (\n            <TableRow key={r.id}>\n              <TableCell component=\"th\" scope=\"row\">\n                {r.author}\n              </TableCell>\n              <TableCell>{excerpt(r.content)}</TableCell>\n              <TableCell>\n                {!r.userReview ? (\n                  <Link\n                    to={{\n                      pathname: `/reviews/${r.id}`,\n                      state: {\n                        review: r,\n                        movie: movie,\n                      },\n                    }}\n                  >\n                    Full Review\n                  </Link>\n                ) : (\n                  <Link\n                    to={{\n                      pathname: `/content/reviewed`,\n                    }}\n                  >\n                    Full Review\n                  </Link>\n                )}\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import React, { useState } from \"react\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Paper from \"@material-ui/core/Paper\";\nimport AccessTimeIcon from \"@material-ui/icons/AccessTime\";\nimport MonetizationIcon from \"@material-ui/icons/MonetizationOn\";\nimport StarRate from \"@material-ui/icons/StarRate\";\nimport NavigationIcon from \"@material-ui/icons/Navigation\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport ContentReviews from \"../contentReviews\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexWrap: \"wrap\",\n    listStyle: \"none\",\n    padding: theme.spacing(1.5),\n    margin: 0,\n  },\n  chip: {\n    margin: theme.spacing(0.5),\n  },\n  fab: {\n    position: \"fixed\",\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n    zIndex: \"1\",\n  },\n}));\n\nconst ContentDetails = ({ movie, mediaType }) => {\n  const [drawerOpen, setDrawerOpen] = useState(false);\n  const classes = useStyles();\n\n  return (\n    <>\n      <Typography variant=\"h5\" component=\"h3\">\n        Overview\n      </Typography>\n\n      <Typography variant=\"h6\" component=\"p\">\n        {movie.overview}\n      </Typography>\n\n      <Paper component=\"ul\" className={classes.root}>\n        <li>\n          <Chip label=\"Genres\" className={classes.chip} color=\"primary\" />\n        </li>\n        {movie.genres.map((g) => (\n          <li key={g.name}>\n            <Chip label={g.name} className={classes.chip} />\n          </li>\n        ))}\n      </Paper>\n      <Paper component=\"ul\" className={classes.root}>\n        {mediaType === \"movie\" ? (\n          <Chip icon={<AccessTimeIcon />} label={`${movie.runtime} min.`} />\n        ) : (\n          <Chip\n            icon={<AccessTimeIcon />}\n            label={`${movie.episode_run_time} min.`}\n          />\n        )}\n\n        {mediaType === \"movie\" ? (\n          <Chip\n            icon={<MonetizationIcon />}\n            label={`${movie.revenue.toLocaleString()}`}\n          />\n        ) : (\n          <></>\n        )}\n        <Chip\n          icon={<StarRate />}\n          label={`${movie.vote_average} (${movie.vote_count})`}\n        />\n        {mediaType === \"movie\" ? (\n          <Chip label={`Released: ${movie.release_date}`} />\n        ) : (\n          <Chip label={`Released: ${movie.first_air_date}`} />\n        )}\n      </Paper>\n\n      <Paper component=\"ul\" className={classes.root}>\n        <li>\n          <Chip\n            label=\"Production Countries\"\n            className={classes.chip}\n            color=\"primary\"\n          />\n        </li>\n        {movie.production_countries.map((g) => (\n          <li key={g.name}>\n            <Chip label={g.name} className={classes.chip} />\n          </li>\n        ))}\n      </Paper>\n      <Fab color=\"secondary\" variant=\"extended\" className={classes.fab}>\n        <NavigationIcon />\n        Reviews\n      </Fab>\n      <Fab\n        color=\"secondary\"\n        variant=\"extended\"\n        onClick={() => setDrawerOpen(true)}\n        className={classes.fab}\n      >\n        <NavigationIcon />\n        Reviews\n      </Fab>\n      <Drawer\n        anchor=\"top\"\n        open={drawerOpen}\n        onClose={() => setDrawerOpen(false)}\n      >\n        <ContentReviews movie={movie} mediaType={mediaType} />\n      </Drawer>\n    </>\n  );\n};\nexport default ContentDetails;\n","import React from \"react\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport { withRouter } from \"react-router-dom\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    justifyContent: \"space-around\",\n    flexWrap: \"wrap\",\n    padding: theme.spacing(1.5),\n    margin: 0,\n  },\n  tagLine: {\n    fontSize: \"1.5rem\",\n  },\n  tagLineMobile: {\n    fontSize: \"1rem\",\n  },\n}));\n\nconst HeaderContent = ({ movie, history, mediaType }) => {\n  let title = mediaType === \"movie\" ? movie.title : movie.name;\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"md\"));\n\n  return (\n    <Paper component=\"div\" className={classes.root}>\n      {isMobile ? (\n        <>\n          {\" \"}\n          <IconButton aria-label=\"go back\" onClick={() => history.goBack()}>\n            <ArrowBackIcon color=\"primary\" fontSize=\"small\" />\n          </IconButton>\n          <Typography variant=\"h5\" component=\"h5\">\n            {title}\n            <a href={movie.homepage}>\n              <HomeIcon color=\"primary\" />\n            </a>\n            <br />\n            <span className={classes.tagLineMobile}>{`${movie.tagline}`} </span>\n          </Typography>{\" \"}\n          <IconButton\n            aria-label=\"go forward\"\n            onClick={() => history.goForward()}\n          >\n            <ArrowForwardIcon color=\"primary\" fontSize=\"small\" />\n          </IconButton>\n        </>\n      ) : (\n        <>\n          <IconButton aria-label=\"go back\" onClick={() => history.goBack()}>\n            <ArrowBackIcon color=\"primary\" fontSize=\"large\" />\n          </IconButton>\n          <Typography variant=\"h4\" component=\"h3\">\n            {title}\n            <a href={movie.homepage}>\n              <HomeIcon color=\"primary\" />\n            </a>\n            <br />\n            <span className={classes.tagLine}>{`${movie.tagline}`} </span>\n          </Typography>\n          <IconButton\n            aria-label=\"go forward\"\n            onClick={() => history.goForward()}\n          >\n            <ArrowForwardIcon color=\"primary\" fontSize=\"large\" />\n          </IconButton>\n        </>\n      )}\n    </Paper>\n  );\n};\n\nexport default withRouter(HeaderContent);\n","import React from \"react\";\nimport { useQuery } from \"react-query\";\nimport Spinner from \"../spinner\";\nimport HeaderContent from \"../headerContent\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ImageList from \"@material-ui/core/ImageList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport { getMovieImages, getTvShowImages } from \"../../api/tmdb-api\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n  },\n  gridList: {\n    width: 450,\n    height: \"100vh\",\n  },\n}));\n\nconst TemplateContentPage = ({ content, children, mediaType }) => {\n  const classes = useStyles();\n  let apiCall;\n\n  if (mediaType === \"movie\") {\n    apiCall = getMovieImages;\n  } else {\n    apiCall = getTvShowImages;\n  }\n  const { data, error, isLoading, isError } = useQuery(\n    [\"images\", { id: content.id }],\n    apiCall\n  );\n\n  if (isLoading) {\n    return <Spinner />;\n  }\n\n  if (isError) {\n    return <h1>{error.message}</h1>;\n  }\n  const images = data.posters;\n\n  return (\n    <>\n      <HeaderContent movie={content} mediaType={mediaType} />\n\n      <Grid container spacing={5} style={{ padding: \"15px\" }}>\n        <Grid item xs={12} md={3}>\n          <div className={classes.root}>\n            <ImageList rowHeight={500} className={classes.gridList} cols={1}>\n              {images.map((image) => (\n                <GridListTile\n                  key={image.file_path}\n                  className={classes.gridListTile}\n                  cols={1}\n                >\n                  <img\n                    src={`https://image.tmdb.org/t/p/w500/${image.file_path}`}\n                    alt={image.poster_path}\n                  />\n                </GridListTile>\n              ))}\n            </ImageList>\n          </div>\n        </Grid>\n\n        <Grid item xs={12} md={9}>\n          {children}\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default TemplateContentPage;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { ImageList } from \"@material-ui/core\";\nimport ImageListItem from \"@material-ui/core/ImageListItem\";\nimport ImageListItemBar from \"@material-ui/core/ImageListItemBar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport LocalMoviesIcon from \"@material-ui/icons/LocalMovies\";\nimport Typography from \"@material-ui/core/Typography\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 550,\n  },\n  root: {\n    margin: \"30px 0\",\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n    overflow: \"hidden\",\n    backgroundColor: \"#eeeeee\",\n  },\n  image: {\n    cursor: \"pointer\",\n    objectFit: \"cover\",\n  },\n  imageList: {\n    flexWrap: \"nowrap\",\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n    transform: \"translateZ(0)\",\n  },\n  title: {\n    color: \"#FFF\",\n  },\n  titleBar: {\n    background:\n      \"linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)\",\n  },\n  similarContentTitle: {\n    margin: \"20px 0\",\n  },\n});\n\nexport default function SimilarContent({ itemData, mediaType }) {\n  let title = mediaType === \"movie\" ? \"Movies\" : \"Tv Shows\";\n  let titleMapping = mediaType === \"movie\" ? \"title\" : \"name\";\n  let urlLink = mediaType === \"movie\" ? \"/movies\" : \"/tv\";\n  const classes = useStyles();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"md\"));\n\n  const imageListWidthCols = isMobile ? 1.2 : 2.5;\n\n  return (\n    <>\n      <Typography\n        variant=\"h5\"\n        component=\"h3\"\n        className={classes.similarContentTitle}\n      >\n        Similar {title}\n      </Typography>\n      <div className={classes.root}>\n        <ImageList className={classes.imageList} cols={imageListWidthCols}>\n          {itemData.results.map((item) => (\n            <ImageListItem key={item.id} className={classes.image}>\n              <a href={`${urlLink}/${item.id}`}>\n                <img\n                  src={`https://image.tmdb.org/t/p/w500${item.poster_path}`}\n                  alt={item.title}\n                />\n              </a>\n              <ImageListItemBar\n                title={item[titleMapping]}\n                subtitle={<span>Average Rating: {item.vote_average}</span>}\n                classes={{\n                  root: classes.titleBar,\n                  title: classes.title,\n                }}\n                actionIcon={\n                  <IconButton aria-label={`star ${`${item}.${titleMapping}`}`}>\n                    <LocalMoviesIcon className={classes.title} />\n                  </IconButton>\n                }\n              />\n            </ImageListItem>\n          ))}\n        </ImageList>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n    backgroundColor: \"#FFFFFF\",\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  inline: {\n    display: \"inline\",\n    padding: \"10px 10px 0px 0px\",\n  },\n  individualItem: {\n    width: \"33%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  individualItemMobile: {\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  plusIcon: {\n    cursor: \"pointer\",\n  },\n});\n\nexport default function CastComponent({ cast, handleClickOpen, mediaType }) {\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"md\"));\n  const classes = useStyles();\n\n  let title = mediaType === \"movie\" ? \"Movie\" : \"TV Show\";\n  let individualItemStyling = isMobile\n    ? classes.individualItemMobile\n    : classes.individualItem;\n\n  return (\n    <>\n      <Typography\n        variant=\"h5\"\n        component=\"h3\"\n        className={classes.similarMoviesTitle}\n      >\n        {title} Cast\n      </Typography>\n      <List className={classes.root}>\n        {cast.cast.map((castMember) => (\n          <ListItem\n            alignItems=\"flex-start\"\n            key={castMember.id}\n            className={individualItemStyling}\n          >\n            <ListItemAvatar>\n              <Avatar\n                alt={castMember.name}\n                src={`https://image.tmdb.org/t/p/w500${castMember.profile_path}`}\n              />\n            </ListItemAvatar>\n            <ListItemText\n              primary={castMember.name}\n              secondary={\n                <React.Fragment>\n                  <Typography\n                    component=\"span\"\n                    variant=\"body2\"\n                    className={classes.inline}\n                    color=\"textPrimary\"\n                  >\n                    Character:\n                  </Typography>\n                  {castMember.character}\n                </React.Fragment>\n              }\n            />\n            <AddIcon\n              className={classes.plusIcon}\n              onClick={() => handleClickOpen(castMember.id)}\n            />\n          </ListItem>\n        ))}\n        <Divider variant=\"inset\" component=\"li\" />\n      </List>\n    </>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport LiveTvIcon from \"@material-ui/icons/LiveTv\";\nimport { green, red, blue } from \"@material-ui/core/colors\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Link from \"@material-ui/core/Link\";\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  paper: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexWrap: \"wrap\",\n    listStyle: \"none\",\n    padding: theme.spacing(1.5),\n    margin: 0,\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n  chip: {\n    margin: theme.spacing(0.5),\n  },\n  red: {\n    color: theme.palette.getContrastText(red[500]),\n    backgroundColor: red[500],\n  },\n  green: {\n    color: theme.palette.getContrastText(green[500]),\n    backgroundColor: green[500],\n  },\n  blue: {\n    color: theme.palette.getContrastText(blue[500]),\n    backgroundColor: blue[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          className={classes.closeButton}\n          onClick={onClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n    backgroundColor: \"#FFFFFF\",\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  inline: {\n    display: \"inline\",\n    padding: \"10px 10px 0px 0px\",\n  },\n  individualItem: {\n    width: \"33%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  plusIcon: {\n    cursor: \"pointer\",\n  },\n});\n\nexport default function CastModal({ handleClose, actorDetail, open }) {\n  const classes = useStyles();\n  let infoDetailAvailable =\n    actorDetail !== undefined && actorDetail.biography !== \"\";\n\n  return (\n    <>\n      <Dialog\n        fullWidth\n        maxWidth=\"sm\"\n        onClose={handleClose}\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}\n      >\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n          {actorDetail.name}\n        </DialogTitle>\n        <DialogContent dividers>\n          {infoDetailAvailable ? (\n            <List className={classes.root}>\n              <ListItem alignItems=\"flex-start\">\n                <ListItemAvatar>\n                  <Avatar\n                    alt=\"Remy Sharp\"\n                    src={`https://image.tmdb.org/t/p/w500${actorDetail.image}`}\n                  />\n                </ListItemAvatar>\n                <ListItemText\n                  primary=\"Biography\"\n                  secondary={\n                    <React.Fragment>\n                      <Typography\n                        component=\"span\"\n                        variant=\"body2\"\n                        className={classes.inline}\n                        color=\"textPrimary\"\n                      >\n                        Summary\n                      </Typography>\n                      {actorDetail.biography}\n                    </React.Fragment>\n                  }\n                />\n              </ListItem>\n              <ListItem alignItems=\"flex-start\">\n                <ListItemAvatar>\n                  <Avatar>\n                    <PersonIcon />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                  primary=\"Date of Birth\"\n                  secondary={\n                    <Typography\n                      component=\"span\"\n                      variant=\"body2\"\n                      className={classes.inline}\n                      color=\"textPrimary\"\n                    >\n                      {actorDetail.dateOfBirth}\n                    </Typography>\n                  }\n                />\n              </ListItem>\n              <ListItem alignItems=\"flex-start\">\n                <ListItemAvatar>\n                  <Avatar className={classes.green}>\n                    <HomeIcon />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                  primary=\"Place of Birth\"\n                  secondary={\n                    <Typography\n                      component=\"span\"\n                      variant=\"body2\"\n                      className={classes.inline}\n                      color=\"textPrimary\"\n                    >\n                      {actorDetail.from}\n                    </Typography>\n                  }\n                />\n              </ListItem>\n\n              <ListItem alignItems=\"flex-start\">\n                <ListItemAvatar className={classes.red}>\n                  <Avatar className={classes.red}>\n                    <LiveTvIcon />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                  primary=\"Popularity\"\n                  secondary={\n                    <Typography\n                      component=\"span\"\n                      variant=\"body2\"\n                      className={classes.inline}\n                      color=\"textPrimary\"\n                    >\n                      {actorDetail.popularity}\n                    </Typography>\n                  }\n                />\n              </ListItem>\n            </List>\n          ) : (\n            <Alert variant=\"outlined\" severity=\"info\">\n              No further information available for this cast member.\n            </Alert>\n          )}\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n          {infoDetailAvailable ? (\n            <Button autoFocus color=\"primary\">\n              <Link href={`/person/credits/${actorDetail.id}`}>\n                Full Details\n              </Link>\n            </Button>\n          ) : (\n            <></>\n          )}\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport ContentDetail from \"../components/contentDetail\";\nimport PageTemplate from \"../components/templateContentPage\";\nimport SimilarContent from \"../components/similarContent\";\nimport { getMovie, getSimilarMovies, getMovieCast } from \"../api/tmdb-api\";\nimport { useQuery } from \"react-query\";\nimport Spinner from \"../components/spinner\";\nimport CastComponent from \"../components/castComponent\";\nimport CastModal from \"../components/castModal\";\nimport { getPersonDetail } from \"../api/tmdb-api\";\n\nconst MovieDetailsPage = (props) => {\n  const [open, setOpen] = React.useState(false);\n  const [actorDetail, setActorDetails] = React.useState({});\n\n  const handleClickOpen = async (id) => {\n    const personDetail = await getPersonDetail(id);\n\n    setOpen(true);\n    setActorDetails({\n      id: personDetail.id,\n      name: personDetail.name,\n      from: personDetail.place_of_birth,\n      popularity: personDetail.popularity,\n      biography: personDetail.biography,\n      dateOfBirth: personDetail.birthday,\n      image: personDetail.profile_path,\n    });\n  };\n  const handleClose = () => {\n    setOpen(false);\n    setActorDetails({});\n  };\n  const { id } = props.match.params;\n  const {\n    data: movie,\n    error,\n    isLoading,\n    isError,\n  } = useQuery([\"movie\", { id: id }], getMovie);\n  const { data: similarMovies } = useQuery(\n    [\"similarMovies\", { id: id }],\n    getSimilarMovies\n  );\n  const { data: movieCast } = useQuery([\"movieCast\", { id: id }], getMovieCast);\n\n  if (isLoading) {\n    return <Spinner />;\n  }\n\n  if (isError) {\n    return <h1>{error.message}</h1>;\n  }\n\n  return (\n    <>\n      {movie && similarMovies && movieCast ? (\n        <>\n          <PageTemplate content={movie} mediaType={\"movie\"}>\n            <ContentDetail movie={movie} mediaType={\"movie\"} />\n            <SimilarContent itemData={similarMovies} mediaType={\"movie\"} />\n            <CastComponent\n              cast={movieCast}\n              handleClickOpen={handleClickOpen}\n              mediaType={\"movie\"}\n            />\n            <CastModal\n              handleClose={handleClose}\n              actorDetail={actorDetail}\n              open={open}\n            />\n          </PageTemplate>\n        </>\n      ) : (\n        <Spinner />\n      )}\n    </>\n  );\n};\n\nexport default withRouter(MovieDetailsPage);\n","import React, { useContext } from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { MoviesContext } from \"../../contexts/moviesContext\";\nimport { TvShowsContext } from \"../../contexts/tvShowsContext\";\nimport { markAsFavourite } from \"../../api/tmdb-api\";\n\nconst RemoveFromFavoritesIcon = ({ content, mediaType }) => {\n  let contextType = mediaType === \"movie\" ? MoviesContext : TvShowsContext;\n  const context = useContext(contextType);\n\n  const handleRemoveFromFavorites = async (e) => {\n    e.preventDefault();\n    await markAsFavourite(mediaType, content.id, false);\n    context.removeFromFavorites(content.id);\n    window.location.reload();\n  };\n  return (\n    <IconButton\n      aria-label=\"remove from favorites\"\n      onClick={handleRemoveFromFavorites}\n    >\n      <DeleteIcon color=\"primary\" fontSize=\"large\" />\n    </IconButton>\n  );\n};\n\nexport default RemoveFromFavoritesIcon;\n","import React from \"react\";\nimport RateReviewIcon from \"@material-ui/icons/RateReview\";\nimport { Link } from \"react-router-dom\";\n\nconst WriteReviewIcon = ({ content, mediaType, userId, reviews }) => {\n  return (\n    <Link\n      to={{\n        pathname: `/reviews/${mediaType}/form`,\n        state: {\n          contentId: content.id,\n          userId: userId,\n          reviews: reviews,\n        },\n      }}\n    >\n      <RateReviewIcon color=\"primary\" fontSize=\"large\" />\n    </Link>\n  );\n};\n\nexport default WriteReviewIcon;\n","import React, { useState, useEffect } from \"react\";\nimport PageTemplate from \"../components/templateContentListPage\";\nimport { useQuery } from \"react-query\";\nimport { getFavourites, getUserAccount } from \"../api/tmdb-api\";\nimport Spinner from \"../components/spinner\";\nimport RemoveFromFavorites from \"../components/cardIcons/removeFromFavorites\";\nimport WriteReview from \"../components/cardIcons/writeReview\";\nimport { determinePaginationRange, isLoggedInUser } from \"../util\";\nimport firebase from \"../firebase\";\n\nconst FavoriteMoviesPage = () => {\n  const [drawerOpen, setDrawerOpen] = useState(false);\n  const [mediaTypeChosen, setMediaType] = useState(\"movie\");\n  const [page, setPage] = React.useState(1);\n  const [reviews, setUserReviews] = useState([]);\n  const [userId, setUserId] = useState(undefined);\n  let title =\n    mediaTypeChosen === \"movie\" ? \"Favourite Movies\" : \"Favourite TV Shows\";\n  const sessionId = isLoggedInUser();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      getUserAccount(sessionId).then((userData) => {\n        const itemsRef = firebase\n          .database()\n          .ref(`${mediaTypeChosen}/${userData.id}`);\n        setUserId(userData.id);\n\n        itemsRef.once(\"value\", (snapshot) => {\n          let items = snapshot.val();\n          let reviewArray = [];\n          for (let item in items) {\n            reviewArray.push({\n              firebaseId: item,\n              author: items[item].author,\n              mediaId: items[item].mediaId,\n              content: items[item].content,\n              rating: items[item].rating,\n            });\n          }\n          setUserReviews(reviewArray);\n        });\n      });\n    };\n    fetchData();\n  }, [mediaTypeChosen]);\n\n  const { data: content, isLoading: favouritesLoading } = useQuery(\n    [`favourites`, page, mediaTypeChosen],\n    () => getFavourites(mediaTypeChosen, page),\n    { keepPreviousData: false, staleTime: 5000 }\n  );\n\n  if (favouritesLoading) {\n    return <Spinner />;\n  }\n\n  const pageRange = determinePaginationRange(content.length);\n\n  const handleModalClose = () => {\n    setDrawerOpen(false);\n  };\n  const handleClose = (e) => {\n    setMediaType(e.target.value);\n    setDrawerOpen(false);\n  };\n\n  return (\n    <PageTemplate\n      title={title}\n      content={content}\n      favouritePage={true}\n      mediaType={mediaTypeChosen}\n      mediaTypeChosen={mediaTypeChosen}\n      handleClose={handleClose}\n      setDrawerOpen={setDrawerOpen}\n      drawerOpen={drawerOpen}\n      handleModalClose={handleModalClose}\n      pageRange={pageRange}\n      action={(content) => {\n        return (\n          <>\n            <RemoveFromFavorites\n              content={content}\n              mediaType={mediaTypeChosen}\n            />\n            <WriteReview\n              content={content}\n              mediaType={mediaTypeChosen}\n              content={content}\n              userId={userId}\n              reviews={reviews}\n            />\n          </>\n        );\n      }}\n    />\n  );\n};\n\nexport default FavoriteMoviesPage;\n","import React, { useContext } from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { MoviesContext } from \"../../contexts/moviesContext\";\nimport { TvShowsContext } from \"../../contexts/tvShowsContext\";\nimport { markAsMustWatch } from \"../../api/tmdb-api\";\n\nconst RemoveFromMustWatchIcon = ({ content, mediaType }) => {\n  let contextType = mediaType === \"movie\" ? MoviesContext : TvShowsContext;\n  const context = useContext(contextType);\n\n  const handleRemoveFromMustWatch = async (e) => {\n    e.preventDefault();\n    await markAsMustWatch(mediaType, content.id, false);\n    context.removeFromMustWatch(content.id);\n    window.location.reload();\n  };\n  return (\n    <IconButton\n      aria-label=\"remove from favorites\"\n      onClick={handleRemoveFromMustWatch}\n    >\n      <DeleteIcon color=\"primary\" fontSize=\"large\" />\n    </IconButton>\n  );\n};\n\nexport default RemoveFromMustWatchIcon;\n","import React, { useState } from \"react\";\nimport PageTemplate from \"../components/templateContentListPage\";\nimport { MoviesContext } from \"../contexts/moviesContext\";\nimport { TvShowsContext } from \"../contexts/tvShowsContext\";\nimport { useQuery } from \"react-query\";\nimport { getMustWatchItems } from \"../api/tmdb-api\";\nimport Spinner from \"../components/spinner\";\nimport RemoveFromMustWatch from \"../components/cardIcons/removeFromMustWatch\";\nimport { existingGuestSession, determinePaginationRange } from \"../util\";\n\nconst MustWatchPage = () => {\n  let contextType, removeMustWatch;\n  const [page, setPage] = React.useState(1);\n  const [drawerOpen, setDrawerOpen] = useState(false);\n  const [mediaTypeChosen, setMediaType] = useState(\"movie\");\n  contextType = mediaTypeChosen === \"movie\" ? MoviesContext : TvShowsContext;\n  let title =\n    mediaTypeChosen === \"movie\" ? \"Must Watch Movies\" : \"Must Watch TV\";\n  const guestSession = existingGuestSession();\n\n  const { data: content, isLoading: mustWatchLoading } = useQuery(\n    [`mustWatch`, page, mediaTypeChosen],\n    () => getMustWatchItems(mediaTypeChosen, page),\n    { keepPreviousData: false, staleTime: 5000 }\n  );\n\n  if (mustWatchLoading) {\n    return <Spinner />;\n  }\n\n  const pageRange = determinePaginationRange(content.length);\n\n  const handleModalClose = () => {\n    setDrawerOpen(false);\n  };\n  const handleClose = (e) => {\n    setMediaType(e.target.value);\n    setDrawerOpen(false);\n  };\n\n  if (!guestSession) {\n    removeMustWatch = (content) => {\n      return (\n        <>\n          <RemoveFromMustWatch mediaType={mediaTypeChosen} content={content} />\n        </>\n      );\n    };\n  } else {\n    removeMustWatch = null;\n  }\n\n  return (\n    <PageTemplate\n      title={title}\n      content={content}\n      favouritePage={true}\n      mediaType={mediaTypeChosen}\n      mediaTypeChosen={mediaTypeChosen}\n      handleClose={handleClose}\n      pag={page}\n      setDrawerOpen={setDrawerOpen}\n      drawerOpen={drawerOpen}\n      handleModalClose={handleModalClose}\n      action={removeMustWatch}\n      pageRange={pageRange}\n    />\n  );\n};\n\nexport default MustWatchPage;\n","import React from \"react\";\n\nconst IndividualReview = ({ review }) => {\n  return (\n    <>\n      <p>Review By: {review.author} </p>\n      <p>{review.content} </p>\n    </>\n  );\n};\nexport default IndividualReview;\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport PageTemplate from \"../components/templateContentPage\";\nimport IndividualReview from \"../components/individualReview\";\n\nconst ReviewPage = (props) => {\n  const { movie, review } = props.location.state;\n  return (\n    <PageTemplate content={movie}>\n      <IndividualReview review={review} />\n    </PageTemplate>\n  );\n};\n\nexport default withRouter(ReviewPage);\n","import React, { useContext } from \"react\";\nimport { MoviesContext } from \"../../contexts/moviesContext\";\nimport { TvShowsContext } from \"../../contexts/tvShowsContext\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport PlaylistAddIcon from \"@material-ui/icons/PlaylistAdd\";\nimport { markAsMustWatch } from \"../../api/tmdb-api\";\n\nconst AddToMustWatchIcon = ({ content, mediaType }) => {\n  let contextType = mediaType === \"movie\" ? MoviesContext : TvShowsContext;\n  const context = useContext(contextType);\n\n  const handleAddToMustWatch = async (e) => {\n    e.preventDefault();\n    await markAsMustWatch(mediaType, content.id, true);\n    context.addMustWatch(content.id);\n  };\n  return (\n    <IconButton aria-label=\"add to must watch\" onClick={handleAddToMustWatch}>\n      <PlaylistAddIcon color=\"primary\" fontSize=\"large\" />\n    </IconButton>\n  );\n};\n\nexport default AddToMustWatchIcon;\n","import React, { useState } from \"react\";\nimport PageTemplate from \"../components/templateContentListPage\";\nimport { getUpComingMovies, getUpComingTvShows } from \"../api/tmdb-api\";\nimport { useQuery } from \"react-query\";\nimport Spinner from \"../components/spinner\";\n// import AddToFavoritesIcon from '../components/cardIcons/addToFavorites';\nimport AddToMustWatch from \"../components/cardIcons/addToMustWatch\";\nimport { existingGuestSession } from \"../util\";\n\nconst HomePage = (props) => {\n  //Caching changes added in earlier step for upcoming movies\n  const [drawerOpen, setDrawerOpen] = useState(false);\n  const [mediaTypeChosen, setMediaType] = useState(\"movie\");\n  const [page, setPage] = React.useState(1);\n  // const {  data, error, isLoading, isError }  = useQuery('upcoming', getUpComingMovies);\n  let title =\n    mediaTypeChosen === \"movie\" ? \"Upcoming Movies\" : \"Upcoming TV Shows\";\n  const guestSession = existingGuestSession();\n  let addMustWatch;\n\n  const { data, error, isLoading, isError } = useQuery(\n    [`discover-movies`, { id: page }],\n    () => getUpComingMovies(page),\n    { keepPreviousData: true, staleTime: 5000 }\n  );\n\n  const { data: tvApiCallData } = useQuery(\n    [`discover-tv`, { id: page }],\n    () => getUpComingTvShows(page),\n    { keepPreviousData: true, staleTime: 5000 }\n  );\n\n  const handleModalClose = () => {\n    setDrawerOpen(false);\n  };\n  const handleClose = (e) => {\n    setMediaType(e.target.value);\n    setDrawerOpen(false);\n  };\n\n  const handlePageChange = (event, value) => {\n    setPage(value);\n  };\n\n  if (!guestSession) {\n    addMustWatch = (movie) => {\n      return <AddToMustWatch content={movie} mediaType={mediaTypeChosen} />;\n    };\n  } else {\n    addMustWatch = (movie) => {\n      return null;\n    };\n  }\n\n  if (isLoading) {\n    return <Spinner />;\n  }\n\n  if (isError) {\n    return <h1>{error.message}</h1>;\n  }\n  let upcomingContent;\n  if (mediaTypeChosen === \"movie\") {\n    upcomingContent = data.results;\n  } else {\n    upcomingContent = tvApiCallData.results;\n  }\n\n  const favorites = upcomingContent.filter((m) => m.favorite);\n  localStorage.setItem(\"favorites\", JSON.stringify(favorites));\n  const addToFavorites = (movieId) => true;\n\n  return (\n    <PageTemplate\n      title={title}\n      content={upcomingContent}\n      favouritePage={true}\n      mediaType={mediaTypeChosen}\n      mediaTypeChosen={mediaTypeChosen}\n      handleClose={handleClose}\n      setDrawerOpen={setDrawerOpen}\n      drawerOpen={drawerOpen}\n      handleModalClose={handleModalClose}\n      selectFavorite={addToFavorites}\n      handlePageChange={handlePageChange}\n      page={page}\n      action={addMustWatch}\n    />\n  );\n};\nexport default HomePage;\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport { isLoggedInUser, existingGuestSession } from \"../../util\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport { withRouter } from \"react-router-dom\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    flexGrow: 1,\n  },\n  offset: theme.mixins.toolbar,\n}));\n\nconst SiteHeader = ({ history }) => {\n  let menuOptions;\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = useState(null);\n  const open = Boolean(anchorEl);\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"md\"));\n  const loggedIn = isLoggedInUser();\n  const guestSession = existingGuestSession();\n\n  if (loggedIn) {\n    menuOptions = [\n      { label: \"Movies\", path: \"/movies\" },\n      { label: \"Tv Shows\", path: \"/tv\" },\n      { label: \"Upcoming\", path: \"/movies/upcoming\" },\n      { label: \"Favorites\", path: \"/movies/favorites\" },\n      { label: \"Reviewed\", path: \"/content/reviewed\" },\n      { label: \"Must Watch\", path: \"/mustwatch\" },\n      { label: \"Trending\", path: \"/trending\" },\n      { label: \"Logout\", path: \"/logout\" },\n    ];\n  } else if (guestSession) {\n    menuOptions = [\n      { label: \"Movies\", path: \"/movies\" },\n      { label: \"Tv Shows\", path: \"/tv\" },\n      { label: \"Upcoming\", path: \"/movies/upcoming\" },\n      { label: \"Trending\", path: \"/trending\" },\n      { label: \"Logout\", path: \"/logout\" },\n    ];\n  } else {\n    menuOptions = [];\n  }\n\n  const handleMenuSelect = (pageURL) => {\n    history.push(pageURL);\n  };\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  return (\n    <>\n      <AppBar position=\"fixed\" color=\"secondary\">\n        <Toolbar>\n          <Typography variant=\"h4\" className={classes.title}>\n            TMDB Client\n          </Typography>\n          {!isMobile ? (\n            <Typography variant=\"h6\" className={classes.title}>\n              All you ever wanted to know about Movies!\n            </Typography>\n          ) : (\n            <></>\n          )}\n          {isMobile ? (\n            <>\n              <IconButton\n                aria-label=\"menu\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleMenu}\n                color=\"inherit\"\n              >\n                <MenuIcon />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"right\",\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"right\",\n                }}\n                open={open}\n                onClose={() => setAnchorEl(null)}\n              >\n                {menuOptions.map((opt) => (\n                  <MenuItem\n                    key={opt.label}\n                    onClick={() => handleMenuSelect(opt.path)}\n                  >\n                    {opt.label}\n                  </MenuItem>\n                ))}\n              </Menu>\n            </>\n          ) : (\n            <>\n              {menuOptions.map((opt) => (\n                <Button\n                  key={opt.label}\n                  color=\"inherit\"\n                  onClick={() => handleMenuSelect(opt.path)}\n                >\n                  {opt.label}\n                </Button>\n              ))}\n            </>\n          )}\n        </Toolbar>\n      </AppBar>\n      <div className={classes.offset} />\n    </>\n  );\n};\n\nexport default withRouter(SiteHeader);\n","import React, { useContext, useState, useEffect } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport useForm from \"react-hook-form\";\nimport { MoviesContext } from \"../../contexts/moviesContext\";\nimport { TvShowsContext } from \"../../contexts/tvShowsContext\";\nimport { withRouter } from \"react-router-dom\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport firebase from \"../../firebase\";\nimport { getUserAccount, reviewContent } from \"../../api/tmdb-api\";\nimport { isLoggedInUser, ratingOptions } from \"../../util\";\n\nconst ratings = ratingOptions();\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(2),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  form: {\n    width: \"100%\",\n    \"& > * \": {\n      marginTop: theme.spacing(2),\n    },\n  },\n  textField: {\n    width: \"40ch\",\n  },\n  submit: {\n    marginRight: theme.spacing(2),\n  },\n  snack: {\n    width: \"50%\",\n    \"& > * \": {\n      width: \"100%\",\n    },\n  },\n}));\n\nconst ReviewForm = ({ content, history, mediaType, existingReview }) => {\n  const sessionId = isLoggedInUser();\n  let contextType;\n  const classes = useStyles();\n  const { register, handleSubmit, errors } = useForm();\n\n  contextType = mediaType === \"movie\" ? MoviesContext : TvShowsContext;\n\n  let context = useContext(contextType);\n  const [rating, setRating] = useState(3);\n  const [open, setOpen] = React.useState(false);\n  const [userId, setUserAccountId] = useState(undefined);\n  const [author, setAuthor] = useState(\"\");\n  const [reviewContentText, setContent] = useState(\"\");\n\n  const itemsRef = firebase.database().ref(`${mediaType}/${userId}`);\n\n  useEffect(() => {\n    if (existingReview) {\n      setRating(existingReview.rating);\n      setAuthor(existingReview.author);\n      setContent(existingReview.content);\n    }\n  }, []);\n\n  useEffect(() => {\n    getUserAccount(sessionId).then((userData) => {\n      setAuthor(userData.name);\n      setUserAccountId(userData.id);\n    });\n  });\n\n  const handleSnackClose = (event) => {\n    setOpen(false);\n    history.push(\"/content/reviewed\");\n  };\n\n  const handleRatingChange = (event) => {\n    setRating(event.target.value);\n  };\n\n  const onSubmit = async (review) => {\n    console.log(content);\n    review.mediaId = content.id;\n    review.rating = rating;\n    review.accountId = userId;\n    review.mediaType = mediaType;\n    if (existingReview) {\n      itemsRef.child(existingReview.firebaseId).update({\n        author: review.author,\n        rating: rating,\n        content: review.content,\n      });\n    } else {\n      itemsRef.push(review);\n    }\n\n    context.addReview(content, review);\n    await reviewContent(mediaType, content.id, rating);\n    setOpen(true);\n  };\n\n  const handleAuthorChange = (e) => {\n    setAuthor(e.target.value);\n  };\n  const handleContentChange = (e) => {\n    setContent(e.target.value);\n  };\n\n  const resetReviewFields = () => {\n    setAuthor(\"\");\n    setContent(\"\");\n  };\n\n  return (\n    <Box component=\"div\" className={classes.root}>\n      <Typography component=\"h2\" variant=\"h3\">\n        Write a review\n      </Typography>\n      <Snackbar\n        className={classes.snack}\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n        open={open}\n        onClose={handleSnackClose}\n      >\n        <MuiAlert\n          severity=\"success\"\n          variant=\"filled\"\n          onClose={handleSnackClose}\n        >\n          <Typography variant=\"h4\">\n            Thank you for submitting a review\n          </Typography>\n        </MuiAlert>\n      </Snackbar>\n      <form\n        className={classes.form}\n        onSubmit={handleSubmit(onSubmit)}\n        noValidate\n      >\n        <TextField\n          className={classes.textField}\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          id=\"author\"\n          value={author}\n          onChange={handleAuthorChange}\n          label=\"Author's name\"\n          name=\"author\"\n          value={author}\n          autoFocus\n          inputRef={register({ required: \"Author name required\" })}\n        />\n        {errors.author && (\n          <Typography variant=\"h6\" component=\"p\">\n            {errors.author.message}\n          </Typography>\n        )}\n\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          value={reviewContentText}\n          onChange={handleContentChange}\n          name=\"content\"\n          label=\"Review text\"\n          id=\"content\"\n          multiline\n          rows={10}\n          inputRef={register({\n            required: \"No review text\",\n            minLength: { value: 10, message: \"Review is too short\" },\n          })}\n        />\n        {errors.content && (\n          <Typography variant=\"h6\" component=\"p\">\n            {errors.content.message}\n          </Typography>\n        )}\n        <TextField\n          id=\"select-rating\"\n          select\n          variant=\"outlined\"\n          label=\"Rating Select\"\n          value={rating}\n          onChange={handleRatingChange}\n          helperText=\"Don't forget your rating\"\n        >\n          {ratings.map((option) => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n        </TextField>\n\n        <Box className={classes.buttons}>\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Submit\n          </Button>\n          <Button\n            type=\"reset\"\n            variant=\"contained\"\n            color=\"secondary\"\n            className={classes.submit}\n            onClick={resetReviewFields}\n          >\n            Reset\n          </Button>\n        </Box>\n      </form>\n    </Box>\n  );\n};\n\nexport default withRouter(ReviewForm);\n","import React from \"react\";\nimport PageTemplate from \"../components/templateContentPage\";\nimport ReviewForm from \"../components/reviewForm\";\nimport { withRouter } from \"react-router-dom\";\nimport { useQuery } from \"react-query\";\nimport { getMovie, getTvShow } from \"../api/tmdb-api\";\nimport Spinner from \"../components/spinner\";\n\nconst WriteReviewPage = (props) => {\n  let existingReview;\n  let apiCall, mediaTypeChosen;\n  const { contentId } = props.location.state;\n  const { pathname } = props.location;\n  const { reviews } = props.location.state;\n\n  if (reviews) {\n    if (reviews.length > 0) {\n      existingReview = reviews.find((review) => review.mediaId === contentId);\n    }\n  }\n\n  let movieCheck = pathname.includes(\"movie\") ? true : false;\n\n  if (movieCheck === true) {\n    apiCall = getMovie;\n    mediaTypeChosen = \"movie\";\n  } else {\n    apiCall = getTvShow;\n    mediaTypeChosen = \"tv\";\n  }\n\n  // let apiCall = movieCheck === true ? getMovie : getTvShow;\n\n  const {\n    data: content,\n    error,\n    isLoading,\n    isError,\n  } = useQuery([\"content\", { id: contentId }], apiCall);\n\n  if (isLoading) {\n    return <Spinner />;\n  }\n\n  if (isError) {\n    return <h1>{error.message}</h1>;\n  }\n  return (\n    <PageTemplate content={content} mediaType={mediaTypeChosen}>\n      <ReviewForm\n        content={content}\n        mediaType={mediaTypeChosen}\n        existingReview={existingReview}\n      />\n    </PageTemplate>\n  );\n};\n\nexport default withRouter(WriteReviewPage);\n","import React, { useState, useEffect } from \"react\";\nimport PageTemplate from \"../components/templateContentListPage\";\nimport { useQuery } from \"react-query\";\nimport Spinner from \"../components/spinner\";\nimport { getTvShows, filteredMoviesSearch } from \"../api/tmdb-api\";\nimport AddToFavoritesIcon from \"../components/cardIcons/addToFavorites\";\nimport { queryClient } from \"../index\";\nimport { existingGuestSession, determinePaginationRange } from \"../util\";\n\nconst TvListPage = (props) => {\n  let favouriteIconDisplay;\n  const [filter, setFilter] = useState(false);\n  const [filterData, setFilterData] = useState([]);\n  const [page, setPage] = React.useState(1);\n  const guestSession = existingGuestSession();\n\n  const { data, error, isLoading, isError } = useQuery(\n    [\"discover-tv\", { id: page }],\n    () => getTvShows(page),\n    { keepPreviousData: true, staleTime: 5000 }\n  );\n\n  useEffect(() => {\n    if (data?.hasMore) {\n      queryClient.prefetchQuery([\"discover-tv\", page + 1], () =>\n        getTvShows(page + 1)\n      );\n    }\n  }, [data, page, queryClient]);\n\n  const handlePageChange = (event, value) => {\n    setPage(value);\n  };\n\n  if (!guestSession) {\n    favouriteIconDisplay = (movie) => {\n      return <AddToFavoritesIcon content={movie} mediaType={\"tv\"} />;\n    };\n  } else {\n    favouriteIconDisplay = (movie) => {\n      return null;\n    };\n  }\n\n  if (isLoading) {\n    return <Spinner />;\n  }\n\n  const pageRange = determinePaginationRange(data.total_results);\n\n  if (isError) {\n    return <h1>{error.message}</h1>;\n  }\n  let tvShows, updatedTvShows;\n  if (filter) {\n    tvShows = filterData;\n  } else {\n    tvShows = data.results;\n    updatedTvShows = tvShows.map((show) => {\n      show.title = show.name;\n      show.release_date = show.first_air_date;\n    });\n  }\n\n  let filteredSearchFunction = async (\n    release_year,\n    average_rating_greater_than,\n    average_rating_less_than,\n    duration_less_than,\n    duration_greater_than,\n    original_language,\n    sort_category,\n    mediaType,\n    first_air_date_year\n  ) => {\n    let filterApiCall = await filteredMoviesSearch(\n      release_year,\n      average_rating_greater_than,\n      average_rating_less_than,\n      duration_less_than,\n      duration_greater_than,\n      original_language,\n      sort_category,\n      mediaType,\n      first_air_date_year\n    );\n    tvShows = filterApiCall.results;\n    setFilterData(filterApiCall.results);\n    setFilter(true);\n  };\n  return (\n    <PageTemplate\n      title=\"Discover TV Shows\"\n      content={tvShows}\n      action={favouriteIconDisplay}\n      filteredMoviesSearch={filteredSearchFunction}\n      handlePageChange={handlePageChange}\n      page={page}\n      mediaType={\"tv\"}\n      pageRange={pageRange}\n    />\n  );\n};\n\nexport default TvListPage;\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nexport default function CastMemberAvatar({ personDetail, isMobile }) {\n  const useStyles = makeStyles((theme) => ({\n    title: {\n      textAlign: \"center\",\n      margin: \"20px 10px\",\n    },\n    large: {\n      width: \"12vw\",\n      height: \"20vh\",\n      margin: \"20px auto\",\n    },\n    largeMobile: {\n      width: \"60vw\",\n      height: \"30vh\",\n      margin: \"20px auto\",\n    },\n  }));\n\n  const classes = useStyles();\n\n  const castImageBubbleStyle = isMobile ? classes.largeMobile : classes.large;\n\n  return (\n    <Grid item xs={12} md={12}>\n      {isMobile ? (\n        <Typography className={classes.title} variant=\"h5\" gutterBottom>\n          {personDetail.name}\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h3\" gutterBottom>\n          {personDetail.name}\n        </Typography>\n      )}\n\n      <Avatar\n        alt={personDetail.name}\n        src={`https://image.tmdb.org/t/p/w500${personDetail.profile_path}`}\n        className={castImageBubbleStyle}\n      />\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\n\nexport default function CastMemberIndividualInfo({ type, personDetail, icon }) {\n  let age,\n    textDisplay = undefined;\n  let currentDate = new Date();\n\n  if (type === \"popularity\") {\n    textDisplay = `Popularity ${personDetail.popularity}`;\n  } else if (type === \"dateOfBirth\") {\n    age =\n      currentDate.getFullYear() - new Date(personDetail.birthday).getFullYear();\n    textDisplay = `${personDetail.birthday} (${age} years old)`;\n  } else {\n    textDisplay = `${personDetail.place_of_birth}`;\n  }\n\n  const useStyles = makeStyles((theme) => ({\n    title: {\n      textAlign: \"center\",\n      margin: \"20px 10px\",\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: \"center\",\n      color: theme.palette.text.secondary,\n    },\n  }));\n\n  const classes = useStyles();\n\n  return (\n    <Grid item xs={12} md={4}>\n      <Paper className={classes.paper}>\n        {icon}\n\n        <Typography className={classes.title} variant=\"h5\" gutterBottom>\n          {textDisplay}\n        </Typography>\n      </Paper>\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\n\nexport default function CastMemberBiography({ biography, isMobile }) {\n  const useStyles = makeStyles((theme) => ({\n    title: {\n      textAlign: \"center\",\n      margin: \"20px 10px\",\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: \"center\",\n      color: theme.palette.text.secondary,\n    },\n  }));\n\n  const classes = useStyles();\n  return (\n    <>\n      {isMobile ? (\n        <Typography className={classes.title} variant=\"h5\" gutterBottom>\n          Biography\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h3\" gutterBottom>\n          Biography\n        </Typography>\n      )}\n\n      <Grid item xs={12}>\n        <Paper className={classes.paper}>\n          <Typography\n            className={classes.title}\n            variant=\"subtitle1\"\n            gutterBottom\n          >\n            {biography}\n          </Typography>\n        </Paper>\n      </Grid>\n    </>\n  );\n}\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport img from \"../../images/film-poster-placeholder.png\";\nimport Button from \"@material-ui/core/Button\";\n\nexport default function CastMemberCredits({\n  isMobile,\n  page,\n  rowsPerPage,\n  rows,\n  handleChangePage,\n  handleChangeRowsPerPage,\n}) {\n  const useStyles = makeStyles((theme) => ({\n    title: {\n      textAlign: \"center\",\n      margin: \"20px 10px\",\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: \"center\",\n      color: theme.palette.text.secondary,\n    },\n  }));\n\n  const columns = [\n    { id: \"poster\", label: \"Poster\", minWidth: 170 },\n    { id: \"title\", label: \"Title\", minWidth: 170 },\n    { id: \"character\", label: \"Character\", minWidth: 100 },\n    {\n      id: \"overview\",\n      label: \"Summary\",\n      minWidth: 220,\n      align: \"left\",\n    },\n    {\n      id: \"release_date\",\n      label: \"Release Date\",\n      minWidth: 170,\n      align: \"left\",\n      format: (value) => value.toLocaleString(\"en-US\"),\n    },\n    {\n      id: \"average_rating\",\n      label: \"Average Rating\",\n      minWidth: 170,\n      align: \"left\",\n      format: (value) => value.toLocaleString(\"en-US\"),\n    },\n    {\n      id: \"type\",\n      label: \"Media Type\",\n      minWidth: 170,\n      align: \"left\",\n    },\n    {\n      id: \"id\",\n      label: \"id\",\n      minWidth: 0,\n      align: \"left\",\n    },\n  ];\n\n  const classes = useStyles();\n  return (\n    <>\n      {isMobile ? (\n        <Typography className={classes.title} variant=\"h5\" gutterBottom>\n          Appears In\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h3\" gutterBottom>\n          Appears In\n        </Typography>\n      )}\n\n      <Grid item xs={12}>\n        <Paper className={classes.root}>\n          <TableContainer className={classes.container}>\n            <Table stickyHeader aria-label=\"sticky table\">\n              <TableHead>\n                <TableRow>\n                  {columns.map((column) => (\n                    <TableCell\n                      key={column.id}\n                      align={column.align}\n                      style={{ minWidth: column.minWidth }}\n                    >\n                      {column.label}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {rows\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                  .map((row) => {\n                    return (\n                      <TableRow\n                        hover\n                        role=\"checkbox\"\n                        tabIndex={-1}\n                        key={row.code}\n                      >\n                        {columns.map((column) => {\n                          const value = row[column.id];\n                          let valueImageCheck = undefined;\n                          let imageNullCheck = undefined;\n                          let buttonCheck = undefined;\n\n                          if (column.id === \"poster\") {\n                            valueImageCheck = true;\n                            if (value.includes(\"null\")) {\n                              imageNullCheck = true;\n                            }\n                          } else if (column.id === \"id\") {\n                            valueImageCheck = true;\n                            buttonCheck = true;\n                            imageNullCheck = true;\n                          }\n\n                          return (\n                            <>\n                              {valueImageCheck === undefined ? (\n                                <TableCell key={column.id} align={column.align}>\n                                  {column.format && typeof value === \"number\"\n                                    ? column.format(value)\n                                    : value}\n                                </TableCell>\n                              ) : imageNullCheck === undefined ? (\n                                <TableCell>\n                                  <img\n                                    alt=\"Content credit media\"\n                                    width=\"200px\"\n                                    height=\"125px\"\n                                    src={`https://image.tmdb.org/t/p/w500${value}`}\n                                  />\n                                </TableCell>\n                              ) : buttonCheck === undefined ? (\n                                <TableCell>\n                                  <img\n                                    width=\"200px\"\n                                    height=\"125px\"\n                                    src={img}\n                                    alt=\"Content credit media\"\n                                  />\n                                </TableCell>\n                              ) : (\n                                <TableCell>\n                                  <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    href={`/movies/${value}`}\n                                  >\n                                    More Info\n                                  </Button>\n                                </TableCell>\n                              )}\n                            </>\n                          );\n                        })}\n                      </TableRow>\n                    );\n                  })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <TablePagination\n            rowsPerPageOptions={[10, 25, 100]}\n            component=\"div\"\n            count={rows.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onPageChange={handleChangePage}\n            onRowsPerPageChange={handleChangeRowsPerPage}\n          />\n        </Paper>\n      </Grid>\n    </>\n  );\n}\n","import React from \"react\";\nimport { useQuery } from \"react-query\";\nimport Spinner from \"../components/spinner\";\nimport { getPersonCredits, getPersonDetail } from \"../api/tmdb-api\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PersonPinIcon from \"@material-ui/icons/PersonPin\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport Fab from \"@material-ui/core/Fab\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport CastMemberAvatar from \"../components/castMemberAvatar\";\nimport CastMemberIndividualInfo from \"../components/castMemberIndividualInfo\";\nimport CastMemberBiography from \"../components/castMemberBiography\";\nimport CastMemberCredits from \"../components/castMemberCredits\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  },\n  title: {\n    textAlign: \"center\",\n    margin: \"20px 10px\",\n  },\n  root2: {\n    width: \"100%\",\n  },\n  container: {\n    maxHeight: 840,\n  },\n  fab: {\n    position: \"fixed\",\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n    zIndex: 2,\n  },\n}));\n\nconst CastMemberInfoPage = (props) => {\n  let rows = [];\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const classes = useStyles();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"md\"));\n  const { data, error, isLoading, isError } = useQuery(\n    [\"personCredits\", props.match.params.id],\n    () => getPersonCredits(props.match.params.id)\n  );\n  const { data: personDetail } = useQuery(\n    [\"personDetail\", props.match.params.id],\n    () => getPersonDetail(props.match.params.id)\n  );\n\n  if (isLoading) {\n    return <Spinner />;\n  }\n\n  if (isError) {\n    return <h1>{error.message}</h1>;\n  }\n\n  function createData(\n    poster,\n    title,\n    character,\n    overview,\n    release_date,\n    average_rating,\n    type,\n    id\n  ) {\n    return {\n      poster,\n      title,\n      character,\n      overview,\n      release_date,\n      average_rating,\n      type,\n      id,\n    };\n  }\n\n  data.cast.forEach((item) => {\n    let title = \"\";\n    if (\"name\" in item) {\n      title = item[\"name\"];\n    } else {\n      title = item[\"title\"];\n    }\n    rows.push(\n      createData(\n        `https://image.tmdb.org/t/p/w500${item.poster_path}`,\n        title,\n        item.character,\n        item.overview,\n        item.release_date,\n        item.vote_average,\n        item.media_type,\n        item.id\n      )\n    );\n  });\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return (\n    <>\n      {personDetail ? (\n        <Container width=\"80vw\">\n          <div className={classes.root}>\n            <Grid container spacing={3}>\n              <CastMemberAvatar\n                isMobile={isMobile}\n                personDetail={personDetail}\n              />\n\n              <CastMemberIndividualInfo\n                type={\"placeOfBirth\"}\n                personDetail={personDetail}\n                icon={<HomeIcon color=\"primary\" fontSize=\"large\" />}\n              />\n              <CastMemberIndividualInfo\n                type={\"popularity\"}\n                personDetail={personDetail}\n                icon={<FavoriteIcon color=\"primary\" fontSize=\"large\" />}\n              />\n              <CastMemberIndividualInfo\n                type={\"dateOfBirth\"}\n                personDetail={personDetail}\n                icon={<PersonPinIcon color=\"primary\" fontSize=\"large\" />}\n              />\n\n              <CastMemberBiography\n                isMobile={isMobile}\n                biography={personDetail.biography}\n              />\n              {rows.length > 0 ? (\n                <CastMemberCredits\n                  isMobile={isMobile}\n                  data={data}\n                  page={page}\n                  rowsPerPage={rowsPerPage}\n                  rows={rows}\n                  handleChangePage={handleChangePage}\n                  handleChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n              ) : (\n                <Spinner />\n              )}\n            </Grid>\n          </div>\n          <Fab\n            color=\"secondary\"\n            variant=\"extended\"\n            className={classes.fab}\n            onClick={() => props.history.goBack()}\n          >\n            <ArrowBackIcon />\n            Back To Movie\n          </Fab>\n        </Container>\n      ) : (\n        <Spinner />\n      )}\n    </>\n  );\n};\n\nexport default CastMemberInfoPage;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\n\nexport default function TrendingPageTitle({ mediaType, isMobile }) {\n  const useStyles = makeStyles((theme) => ({\n    heading: {\n      margin: \"40px auto\",\n      fontWeight: \"500\",\n      width: \"100%\",\n      textAlign: \"center\",\n    },\n    headingMobile: {\n      margin: \"10px auto\",\n      fontWeight: \"500\",\n      width: \"100%\",\n      textAlign: \"center\",\n    },\n  }));\n\n  const classes = useStyles();\n  return (\n    <>\n      {mediaType === \"movie\" && !isMobile ? (\n        <Typography variant=\"h2\" className={classes.heading} gutterBottom>\n          Trending {mediaType}s\n        </Typography>\n      ) : mediaType === \"movie\" && isMobile ? (\n        <Typography variant=\"h4\" className={classes.headingMobile} gutterBottom>\n          Trending {mediaType}s\n        </Typography>\n      ) : mediaType === \"tv\" && !isMobile ? (\n        <Typography variant=\"h2\" className={classes.heading} gutterBottom>\n          Trending {mediaType.toUpperCase()} shows\n        </Typography>\n      ) : mediaType === \"tv\" && isMobile ? (\n        <Typography variant=\"h4\" className={classes.headingMobile} gutterBottom>\n          Trending {mediaType.toUpperCase()} shows\n        </Typography>\n      ) : !isMobile ? (\n        <Typography variant=\"h2\" className={classes.heading} gutterBottom>\n          Trending People\n        </Typography>\n      ) : (\n        <Typography variant=\"h4\" className={classes.headingMobile} gutterBottom>\n          Trending People\n        </Typography>\n      )}\n    </>\n  );\n}\n","// import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ImageList from \"@material-ui/core/ImageList\";\nimport ImageListItem from \"@material-ui/core/ImageListItem\";\nimport ImageListItemBar from \"@material-ui/core/ImageListItemBar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\n\nexport default function TrendingImageList({\n  trendingInfo,\n  moreDetailUrl,\n  isMobile,\n}) {\n  const useStyles = makeStyles((theme) => ({\n    imageList: {\n      width: 900,\n      height: \"100vh\",\n      margin: \"10px auto !important\",\n      transform: \"translateZ(0)\",\n    },\n    imageListMobile: {\n      width: \"90vw\",\n      height: \"100vh\",\n      margin: \"10px auto !important\",\n      transform: \"translateZ(0)\",\n    },\n    titleBar: {\n      background:\n        \"linear-gradient(to bottom, rgba(0,0,0,0.7) 0%, \" +\n        \"rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)\",\n    },\n    icon: {\n      color: \"white\",\n    },\n    link: {\n      width: \"100%\",\n    },\n  }));\n\n  const classes = useStyles();\n  const imageListStyling = isMobile\n    ? classes.imageListMobile\n    : classes.imageList;\n  return (\n    <ImageList rowHeight={200} gap={1} className={imageListStyling}>\n      {!isMobile\n        ? trendingInfo.map((item) => (\n            <ImageListItem\n              key={item.img}\n              cols={item.featured ? 2 : 1}\n              rows={item.featured ? 2 : 1}\n            >\n              <img src={item.img} alt={item.title} />\n              <a href={`${moreDetailUrl}/${item.id}`}>\n                <ImageListItemBar\n                  title={item.title}\n                  position=\"top\"\n                  actionIcon={\n                    <IconButton\n                      aria-label={`star ${item.title}`}\n                      className={classes.icon}\n                    >\n                      <ChevronRightIcon />\n                    </IconButton>\n                  }\n                  actionPosition=\"left\"\n                  className={classes.titleBar}\n                />\n              </a>\n            </ImageListItem>\n          ))\n        : trendingInfo.map((item) => (\n            <ImageListItem key={item.img} cols={2} rows={2}>\n              <img src={item.img} alt={item.title} />\n              <a href={`${moreDetailUrl}/${item.id}`}>\n                <ImageListItemBar\n                  title={item.title}\n                  position=\"top\"\n                  actionIcon={\n                    <IconButton\n                      aria-label={`star ${item.title}`}\n                      className={classes.icon}\n                    >\n                      <ChevronRightIcon />\n                    </IconButton>\n                  }\n                  actionPosition=\"left\"\n                  className={classes.titleBar}\n                />\n              </a>\n            </ImageListItem>\n          ))}\n    </ImageList>\n  );\n}\n","import React from \"react\";\nimport { useQuery } from \"react-query\";\nimport Spinner from \"../components/spinner\";\nimport { getTrendingItems } from \"../api/tmdb-api\";\nimport Container from \"@material-ui/core/Container\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TrendingPageTitle from \"../components/trendingPageTitle\";\nimport TrendingInputFilter from \"../components/trendingInputFilter\";\nimport TrendingImageList from \"../components/trendingImageList\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n    overflow: \"hidden\",\n    backgroundColor: theme.palette.background.paper,\n  },\n  gridParent: {\n    flexGrow: 1,\n  },\n  selectGrid: {\n    margin: \"10px auto\",\n    width: \"100%\",\n    textAlign: \"center\",\n  },\n}));\n\nconst TrendingPage = (props) => {\n  let trendingInfo = [];\n  let moreDetailUrl;\n  const [time, setTime] = React.useState(\"day\");\n  const [mediaType, setMediaType] = React.useState(\"movie\");\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"md\"));\n  const { data, error, isLoading, isError } = useQuery(\n    [\"trending\", time, mediaType],\n    () => getTrendingItems(mediaType, time)\n  );\n\n  if (isLoading) {\n    return <Spinner />;\n  }\n\n  if (isError) {\n    return <h1>{error.message}</h1>;\n  }\n\n  if (mediaType === \"movie\" || mediaType === \"tv\") {\n    moreDetailUrl = \"/movies\";\n  } else {\n    moreDetailUrl = \"/person/credits\";\n  }\n  data.results.forEach((item, i) => {\n    let featuredStatus;\n    let title;\n    let imagePath = item.backdrop_path;\n    if (i % 3 === 0) {\n      featuredStatus = true;\n    } else {\n      featuredStatus = false;\n    }\n\n    if (mediaType === \"tv\") {\n      title = item.name;\n    } else if (mediaType === \"movie\") {\n      title = item.title;\n    } else {\n      title = item.name;\n      imagePath = item.profile_path;\n    }\n    trendingInfo.push({\n      img: `https://image.tmdb.org/t/p/w500${imagePath}`,\n      title: `${title}`,\n      author: \"author\",\n      featured: featuredStatus,\n      id: item.id,\n    });\n  });\n\n  const handleChange = async (event) => {\n    if (\n      event.target.value === \"tv\" ||\n      event.target.value === \"movie\" ||\n      event.target.value === \"person\"\n    ) {\n      setMediaType(event.target.value);\n    } else {\n      setTime(event.target.value);\n    }\n  };\n\n  return (\n    <>\n      {data ? (\n        <Container width=\"90vw\">\n          <div className={classes.root}>\n            <TrendingPageTitle mediaType={mediaType} isMobile={isMobile} />\n\n            <div className={classes.gridParent}>\n              <Grid container spacing={3}>\n                <Grid item xs={12} className={classes.selectGrid}>\n                  <TrendingInputFilter\n                    labelValue={\"Media Type\"}\n                    value={mediaType}\n                    handleChange={handleChange}\n                    menuItems={[\"tv\", \"movie\", \"person\"]}\n                    helperText={\"Select the media type\"}\n                    isMobile={isMobile}\n                  />\n                  <TrendingInputFilter\n                    labelValue={\"Timeframe\"}\n                    value={time}\n                    handleChange={handleChange}\n                    menuItems={[\"day\", \"week\"]}\n                    helperText={\"Select the timeframe\"}\n                    isMobile={isMobile}\n                  />\n                </Grid>\n\n                <Grid item xs={12}>\n                  <TrendingImageList\n                    trendingInfo={trendingInfo}\n                    moreDetailUrl={moreDetailUrl}\n                    isMobile={isMobile}\n                  />\n                </Grid>\n              </Grid>\n            </div>\n          </div>\n        </Container>\n      ) : (\n        <Spinner />\n      )}\n    </>\n  );\n};\n\nexport default TrendingPage;\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport ContentDetail from \"../components/contentDetail\";\nimport PageTemplate from \"../components/templateContentPage\";\nimport SimilarContent from \"../components/similarContent\";\nimport { getTvShow, getSimilarTvShows, getTvCast } from \"../api/tmdb-api\";\nimport { useQuery } from \"react-query\";\nimport Spinner from \"../components/spinner\";\nimport CastComponent from \"../components/castComponent\";\nimport CastModal from \"../components/castModal\";\nimport { getPersonDetail } from \"../api/tmdb-api\";\n\nconst MovieDetailsPage = (props) => {\n  const [open, setOpen] = React.useState(false);\n  const [actorDetail, setActorDetails] = React.useState({});\n\n  const handleClickOpen = async (id) => {\n    const personDetail = await getPersonDetail(id);\n\n    setOpen(true);\n    setActorDetails({\n      id: personDetail.id,\n      name: personDetail.name,\n      from: personDetail.place_of_birth,\n      popularity: personDetail.popularity,\n      biography: personDetail.biography,\n      dateOfBirth: personDetail.birthday,\n      image: personDetail.profile_path,\n    });\n  };\n  const handleClose = () => {\n    setOpen(false);\n    setActorDetails({});\n  };\n  const { id } = props.match.params;\n  const {\n    data: tvShow,\n    error,\n    isLoading,\n    isError,\n  } = useQuery([\"tv\", { id: id }], getTvShow);\n  const { data: similarTvShows } = useQuery(\n    [\"similarTvShows\", { id: id }],\n    getSimilarTvShows\n  );\n  const { data: tvShowCast } = useQuery([\"tvShowCast\", { id: id }], getTvCast);\n\n  if (isLoading) {\n    return <Spinner />;\n  }\n\n  if (isError) {\n    return <h1>{error.message}</h1>;\n  }\n\n  return (\n    <>\n      {tvShow && similarTvShows && tvShowCast ? (\n        <>\n          <PageTemplate content={tvShow}>\n            <ContentDetail movie={tvShow} mediaType={\"tv\"} />\n            <SimilarContent itemData={similarTvShows} mediaType={\"tv\"} />\n            <CastComponent\n              cast={tvShowCast}\n              handleClickOpen={handleClickOpen}\n              mediaType={\"tv\"}\n            />\n            <CastModal\n              handleClose={handleClose}\n              actorDetail={actorDetail}\n              open={open}\n            />\n          </PageTemplate>\n        </>\n      ) : (\n        <Spinner />\n      )}\n    </>\n  );\n};\n\nexport default withRouter(MovieDetailsPage);\n","import React from \"react\";\nimport Spinner from \"../components/spinner\";\nimport {\n  getUserAccount,\n  createRequestToken,\n  askUserForAuthentication,\n  createGuestSession,\n} from \"../api/tmdb-api\";\nimport { useEffect, useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6, 0, 6),\n    display: \"flex\",\n    height: \"70vh\",\n    justifyContent: \"center\",\n    alignContent: \"center\",\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  content: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n}));\n\nconst HomePage = (props) => {\n  const classes = useStyles();\n  const [showSpinner, setShowSpinner] = useState(true);\n\n  useEffect(() => {\n    async function manageUserSession() {\n      let sessionId, guestSessionId;\n\n      guestSessionId = localStorage.getItem(\"guest-session\");\n      sessionId = localStorage.getItem(\"session\");\n      if (sessionId) {\n        await getUserAccount(sessionId);\n        window.location.href = \"/movies\";\n      } else if (guestSessionId) {\n        window.location.href = \"/movies\";\n      } else {\n        setShowSpinner(false);\n      }\n    }\n\n    manageUserSession();\n  }, []);\n\n  const handleUserSessionButtonClick = async () => {\n    let requestTokenResponse = await createRequestToken();\n    let requestToken = requestTokenResponse.request_token;\n    await askUserForAuthentication(requestToken);\n  };\n\n  const handleGuestSessionButtonClick = async () => {\n    let requestTokenResponse = await createGuestSession();\n    localStorage.setItem(\n      \"guest-session\",\n      requestTokenResponse.guest_session_id\n    );\n    window.location.href = \"/movies\";\n  };\n\n  return (\n    <>\n      <main>\n        {showSpinner ? (\n          <Spinner />\n        ) : (\n          <div className={classes.heroContent}>\n            <Container maxWidth=\"sm\" className={classes.content}>\n              <Typography\n                component=\"h1\"\n                variant=\"h2\"\n                align=\"center\"\n                color=\"textPrimary\"\n                gutterBottom\n              >\n                TMDB Client\n              </Typography>\n              <Typography\n                variant=\"h5\"\n                align=\"center\"\n                color=\"textSecondary\"\n                paragraph\n              >\n                A web application that provides information on movies and tv\n                shows from the 3rd party TMDB API.\n              </Typography>\n              <div className={classes.heroButtons}>\n                <Grid container spacing={2} justifyContent=\"center\">\n                  <Grid item>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={handleUserSessionButtonClick}\n                    >\n                      Sign In / Sign Up\n                    </Button>\n                  </Grid>\n                  <Grid item>\n                    <Button\n                      variant=\"outlined\"\n                      color=\"primary\"\n                      onClick={handleGuestSessionButtonClick}\n                    >\n                      Guest Session\n                    </Button>\n                  </Grid>\n                </Grid>\n              </div>\n            </Container>\n          </div>\n        )}\n      </main>\n    </>\n  );\n};\n\nexport default HomePage;\n","import React from \"react\";\nimport Spinner from \"../components/spinner\";\nimport { createUserSession, getUserAccount } from \"../api/tmdb-api\";\nimport { useEffect } from \"react\";\n\nconst CreateSessionPage = (props) => {\n  useEffect(() => {\n    async function manageUserSession() {\n      let response, sessionId;\n\n      if (!localStorage.getItem(\"session\")) {\n        response = await createUserSession();\n\n        sessionId = response.session_id;\n        localStorage.setItem(\"session\", sessionId);\n      } else {\n        sessionId = localStorage.getItem(\"session\");\n        await getUserAccount(sessionId);\n      }\n\n      window.location.href = \"/movies\";\n    }\n\n    manageUserSession();\n  }, []);\n\n  return (\n    <>\n      <Spinner />\n    </>\n  );\n};\n\nexport default CreateSessionPage;\n","import React from \"react\";\nimport Spinner from \"../components/spinner\";\nimport { useEffect } from \"react\";\n\nconst LogoutPage = () => {\n  useEffect(() => {\n    async function deleteSession() {\n      let sessionId;\n      sessionId = localStorage.getItem(\"session\");\n      localStorage.removeItem(\"session\");\n      localStorage.removeItem(\"guest-session\");\n      localStorage.removeItem(\"accountId\");\n      window.location.href = \"/\";\n    }\n\n    deleteSession();\n  }, []);\n\n  return (\n    <>\n      <Spinner />\n    </>\n  );\n};\n\nexport default LogoutPage;\n","import React, { useState, useEffect } from \"react\";\nimport PageTemplate from \"../components/templateContentListPage\";\nimport { useQuery } from \"react-query\";\nimport Spinner from \"../components/spinner\";\nimport { filteredMoviesSearch } from \"../api/tmdb-api\";\nimport AddToFavoritesIcon from \"../components/cardIcons/addToFavorites\";\nimport { queryClient } from \"../index\";\nimport { existingGuestSession, determinePaginationRange } from \"../util\";\nimport { useHistory } from \"react-router-dom\";\n\nconst AdvancedFilterPage = () => {\n  let history = useHistory();\n  let filterState = history.location.state;\n  let mediaType = history.location.pathname.includes(\"movie\") ? \"movie\" : \"tv\";\n\n  let favouriteIconDisplay;\n  const [page, setPage] = useState(1);\n  const guestSession = existingGuestSession();\n  const { data, error, isLoading, isError } = useQuery(\n    [\"advancedFilter\", { id: page }],\n    () =>\n      filteredMoviesSearch(\n        filterState.releaseYear,\n        filterState.averageRatingGreaterThan,\n        filterState.averageRatingLessThan,\n        filterState.durationLessThan,\n        filterState.durationGreaterThan,\n        filterState.originalLanguage,\n        filterState.sortCategory,\n        undefined,\n        page\n      ),\n    { keepPreviousData: true, staleTime: 5000 }\n  );\n\n  const handlePageChange = (event, value) => {\n    setPage(value);\n  };\n\n  useEffect(() => {\n    if (data?.hasMore) {\n      queryClient.prefetchQuery([\"advancedFilter\", page + 1], () =>\n        filteredMoviesSearch(\n          filterState.releaseYear,\n          filterState.averageRatingGreaterThan,\n          filterState.averageRatingLessThan,\n          filterState.durationLessThan,\n          filterState.durationGreaterThan,\n          filterState.originalLanguage,\n          filterState.sortCategory,\n          page + 1\n        )\n      );\n    }\n  }, [data, page, queryClient]);\n\n  if (isLoading) {\n    return <Spinner />;\n  }\n\n  if (isError) {\n    return <h1>{error.message}</h1>;\n  }\n\n  let content = data.results;\n\n  const pageRange = determinePaginationRange(data.total_results);\n\n  if (!guestSession) {\n    favouriteIconDisplay = (movie) => {\n      return <AddToFavoritesIcon content={movie} mediaType={\"movie\"} />;\n    };\n  } else {\n    favouriteIconDisplay = (movie) => {\n      return null;\n    };\n  }\n\n  return (\n    <PageTemplate\n      title={`Advanced Filter`}\n      content={content}\n      action={favouriteIconDisplay}\n      handlePageChange={handlePageChange}\n      page={page}\n      mediaType={mediaType}\n      filterPage={true}\n      pageRange={pageRange}\n    />\n  );\n};\n\nexport default AdvancedFilterPage;\n","import React, { useState, useEffect } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { isLoggedInUser } from \"../../util\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const [redirect, endRedirectDelay] = useState(false);\n  const [transition, setTransition] = React.useState(undefined);\n\n  function delayRedirect() {\n    setTimeout(() => endRedirectDelay(true), 3000);\n  }\n\n  useEffect(() => {\n    delayRedirect();\n  }, [redirect, transition]);\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        isLoggedInUser() ? (\n          <Component {...props} />\n        ) : redirect ? (\n          <Redirect to=\"/\" />\n        ) : (\n          <Snackbar\n            open={true}\n            TransitionComponent={transition}\n            message=\"Guest users cannot access protected routes. Please login with an account to access private routes.\"\n            key={transition ? transition.name : \"\"}\n          />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import React, { useState, useEffect } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { isLoggedInUser, existingGuestSession } from \"../../util\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\n\nconst PublicRoute = ({ component: Component, ...rest }) => {\n  const [redirect, endRedirectDelay] = useState(false);\n  const [transition, setTransition] = React.useState(undefined);\n\n  function delayRedirect() {\n    setTimeout(() => endRedirectDelay(true), 3000);\n  }\n\n  useEffect(() => {\n    delayRedirect();\n  }, [redirect, transition]);\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        isLoggedInUser() || existingGuestSession() ? (\n          <Component {...props} />\n        ) : redirect ? (\n          <Redirect to=\"/\" />\n        ) : (\n          <Snackbar\n            open={true}\n            TransitionComponent={transition}\n            message=\"Please login / create a guest session to access this page.\"\n            key={transition ? transition.name : \"\"}\n          />\n        )\n      }\n    />\n  );\n};\n\nexport default PublicRoute;\n","import React from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { unReviewContent } from \"../../api/tmdb-api\";\nimport firebase from \"../../firebase\";\n\nconst RemoveFromReviewedIcon = ({ content, mediaType, userId, reviews }) => {\n  let contentReview = reviews.find((review) => review.mediaId === content.id);\n\n  const handleRemoveFromReviewed = async (e) => {\n    e.preventDefault();\n    await unReviewContent(mediaType, content.id);\n    const itemRef = firebase\n      .database()\n      .ref(`/${mediaType}/${userId}/${contentReview.firebaseId}`);\n    itemRef.remove();\n    window.location.reload();\n  };\n  return (\n    <IconButton\n      aria-label=\"remove from favorites\"\n      onClick={handleRemoveFromReviewed}\n    >\n      <DeleteIcon color=\"primary\" fontSize=\"large\" />\n    </IconButton>\n  );\n};\n\nexport default RemoveFromReviewedIcon;\n","import React, { useState, useEffect } from \"react\";\nimport PageTemplate from \"../components/templateContentListPage\";\nimport { useQuery } from \"react-query\";\nimport { getReviewed, getUserAccount } from \"../api/tmdb-api\";\nimport Spinner from \"../components/spinner\";\nimport RemoveFromReviewed from \"../components/cardIcons/removeFromReviewed\";\nimport WriteReview from \"../components/cardIcons/writeReview\";\nimport { determinePaginationRange } from \"../util\";\nimport firebase from \"../firebase\";\nimport { isLoggedInUser } from \"../util\";\n\nconst UserReviewedContent = (props) => {\n  const [drawerOpen, setDrawerOpen] = useState(false);\n  const [mediaTypeChosen, setMediaType] = useState(\"movie\");\n  const [page, setPage] = React.useState(1);\n  const [reviews, setUserReviews] = useState([]);\n  const [userId, setUserId] = useState(undefined);\n\n  let title =\n    mediaTypeChosen === \"movie\" ? \"Reviewed Movies\" : \"Reviewed TV Shows\";\n  const sessionId = isLoggedInUser();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      getUserAccount(sessionId).then((userData) => {\n        const itemsRef = firebase\n          .database()\n          .ref(`${mediaTypeChosen}/${userData.id}`);\n        setUserId(userData.id);\n\n        itemsRef.once(\"value\", (snapshot) => {\n          let items = snapshot.val();\n          let reviewArray = [];\n          for (let item in items) {\n            reviewArray.push({\n              firebaseId: item,\n              author: items[item].author,\n              mediaId: items[item].mediaId,\n              content: items[item].content,\n              rating: items[item].rating,\n            });\n          }\n          setUserReviews(reviewArray);\n        });\n      });\n    };\n\n    fetchData();\n  }, [mediaTypeChosen]);\n\n  const { data: content, isLoading: reviewedLoading } = useQuery(\n    [`reviewed`, page, mediaTypeChosen],\n    () => getReviewed(mediaTypeChosen, page),\n    { keepPreviousData: false, staleTime: 5000 }\n  );\n\n  if (reviewedLoading) {\n    return <Spinner />;\n  }\n\n  const pageRange = determinePaginationRange(content.length);\n\n  const handleModalClose = () => {\n    setDrawerOpen(false);\n  };\n  const handleClose = (e) => {\n    setMediaType(e.target.value);\n    setDrawerOpen(false);\n  };\n\n  return (\n    <PageTemplate\n      title={title}\n      content={content}\n      favouritePage={true}\n      mediaType={mediaTypeChosen}\n      mediaTypeChosen={mediaTypeChosen}\n      handleClose={handleClose}\n      setDrawerOpen={setDrawerOpen}\n      drawerOpen={drawerOpen}\n      handleModalClose={handleModalClose}\n      pageRange={pageRange}\n      userContentReviews={reviews}\n      action={(content) => {\n        return (\n          <>\n            <RemoveFromReviewed\n              content={content}\n              mediaType={mediaTypeChosen}\n              userId={userId}\n              reviews={reviews}\n            />\n            <WriteReview\n              content={content}\n              mediaType={mediaTypeChosen}\n              userId={userId}\n              reviews={reviews}\n            />\n          </>\n        );\n      }}\n    />\n  );\n};\n\nexport default UserReviewedContent;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route, Redirect, Switch } from \"react-router-dom\";\nimport MovieListPage from \"./pages/movieListPage\";\nimport MoviePage from \"./pages/movieDetailsPage\";\nimport FavoriteMoviesPage from \"./pages/favoriteMoviesPage\";\nimport MustWatchPage from \"./pages/mustWatchPage\";\nimport ReviewPage from \"./pages/reviewPage\";\nimport UpcomingMoviesPage from \"./pages/upcomingMoviesPage\";\nimport SiteHeader from \"./components/siteHeader\";\nimport { QueryClientProvider, QueryClient } from \"react-query\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport MoviesContextProvider from \"./contexts/moviesContext\";\nimport TvShowsContextProvider from \"./contexts/tvShowsContext\";\nimport AddReviewPage from \"./pages/addReviewPage\";\nimport TvPage from \"./pages/tvListPage\";\nimport CastMemberInfoPage from \"./pages/castMemberInfo\";\nimport TrendingPage from \"./pages/trendingPage\";\nimport TvDetailsPage from \"./pages/tvDetailsPage\";\nimport HomePage from \"./pages/homePage\";\nimport CreateSessionPage from \"./pages/createSessionPage\";\nimport LogoutPage from \"./pages/logoutPage\";\nimport AdvancedFilterPage from \"./pages/advancedFilterPage\";\nimport PrivateRoute from \"./components/privateRoute\";\nimport PublicRoute from \"./components/publicRoute\";\nimport UserReviewedContent from \"./pages/userReviewedContent\";\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      staleTime: 360000,\n      refetchInterval: 360000,\n      refetchOnWindowFocus: false,\n    },\n  },\n});\n\nconst App = () => {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <BrowserRouter>\n        <SiteHeader />\n        <MoviesContextProvider>\n          <TvShowsContextProvider>\n            <Switch>\n              <PrivateRoute\n                component={AddReviewPage}\n                exact\n                path=\"/reviews/:content/form\"\n              />\n              <PublicRoute\n                component={UpcomingMoviesPage}\n                exact\n                path=\"/movies/upcoming\"\n              />\n              <PublicRoute component={TvPage} exact path=\"/tv\" />\n              <PublicRoute component={LogoutPage} exact path=\"/logout\" />\n              <PublicRoute\n                component={AdvancedFilterPage}\n                exact\n                path=\"/movie/filter\"\n              />\n              <PublicRoute\n                component={AdvancedFilterPage}\n                exact\n                path=\"/tv/filter\"\n              />\n              <PublicRoute component={MovieListPage} exact path=\"/movies\" />\n              <PublicRoute component={TrendingPage} exact path=\"/trending\" />\n              <Route\n                component={CreateSessionPage}\n                exact\n                path=\"/success\"\n              />\n              <PublicRoute\n                component={CastMemberInfoPage}\n                exact\n                path=\"/person/credits/:id\"\n              />\n              <PrivateRoute\n                component={FavoriteMoviesPage}\n                exact\n                path=\"/movies/favorites\"\n              />\n              <PrivateRoute component={MustWatchPage} exact path=\"/mustwatch\" />\n              <PrivateRoute\n                component={UserReviewedContent}\n                exact\n                path=\"/content/reviewed\"\n              />\n\n              <PublicRoute component={MoviePage} path=\"/movies/:id\" />\n              <PublicRoute component={TvDetailsPage} path=\"/tv/:id\" />\n              <Route exact path=\"/\" component={HomePage} />\n              <PublicRoute component={ReviewPage} path=\"/reviews/:id\" />\n              <Redirect from=\"*\" to=\"/\" />\n            </Switch>\n          </TvShowsContextProvider>\n        </MoviesContextProvider>\n      </BrowserRouter>\n      <ReactQueryDevtools initialIsOpen={false} />\n    </QueryClientProvider>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}